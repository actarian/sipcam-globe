{"version":3,"sources":["src/js/main.js","../../src/js/globe/constants.js","../../node_modules/d3-geo/src/math.js","../../node_modules/d3-geo/src/interpolate.js","../../src/js/globe/curves.js","../../src/js/globe/drag.service.js","../../src/js/globe/points.js","../../src/js/globe/tooltip.js","../../src/js/globe/globe.js","../../src/js/main.js"],"names":["g","f","exports","module","require","define","amd","globalThis","self","THREE","this","THREE$1","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_defineProperty","obj","value","GLOBE_RADIUS","PARTICLE_SIZE","CURVE_SEGMENTS","Vector3","DEGREE_TO_RADIAN","Math","PI","pi","halfPi","degrees","radians","atan2","cos","sin","sqrt","haversin","x","geoInterpolate","a","b","x0","y0","x1","y1","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d","asin","k","interpolate","t","B","A","y","z","distance","Curve","coords","color","material","getHex","spline","startLat","startLng","endLat","endLng","start","coordinateToPosition","end","altitude","num","distanceTo","min","max","midCoord1","midCoord2","mid1","mid2","getSplineFromCoords","geometry","points","Float32Array","vertices","getPoints","j","vertex","setAttribute","setDrawRange","mesh","prototype","onRender","c","index","from","to","floor","Curves","data","group","items","fromPoint","find","italy","filter","forEach","p","push","latitude","longitude","curves","map","item","add","lat","lng","radius","phi","theta","DragService","downCallback","moveCallback","upCallback","document","e","console","log","dragging","init","_proto","event","position","strength","speed","onMouseDown","bind","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","addEventListener","onDown","down","onDrag","window","innerWidth","innerHeight","sx","sy","onUp","removeEventListener","clientX","clientY","addMouseListeners","removeMouseListeners","touches","preventDefault","pageX","pageY","addTouchListeners","removeTouchListeners","Points","canvas","getParticleCanvas","texture","CanvasTexture","BufferGeometry","PointsMaterial","size","vertexColors","VertexColors","depthTest","transparent","onBeforeCompile","shader","vertexShader","replace","fragmentShader","normals","colors","sizes","normal","getLatLonToVector","point","copy","normalize","r","BufferAttribute","Float32BufferAttribute","createElement","width","height","ctx","getContext","gradient","createRadialGradient","addColorStop","fillStyle","fillRect","lon","Tooltip","removeCallback","div","innerHTML","country","title","address","firstElementChild","element","querySelector","Euler","euler","set","order","Modes","Globe","pow","load","Array","slice","call","querySelectorAll","Constructor","protoProps","staticProps","_this","src","getAttribute","fetch","then","response","json","type","Color","foreign","concat","loadTexture","_this2","loader","TextureLoader","crossOrigin","globeTexture","initScene","mode","renderer","WebGLRenderer","alpha","antialias","setSize","appendChild","domElement","scene","Scene","camera","PerspectiveCamera","up","lookAt","ambient","AmbientLight","directional1","DirectionalLight","globeRotation","globeDragRotation","globeStartDragRotation","globeSpeedRotation","globeGroup","Group","rotation","globe","getGlobe","raycaster","Raycaster","params","threshold","pointer","Vector2","onResize","onPointerMove","onPointerUp","dragService","move","onPlay","classList","SphereGeometry","MeshStandardMaterial","roughness","metalness","roughnessMap","Mesh","addShadow","parent","PlaneGeometry","rotateX","ShadowMaterial","opacity","receiveShadow","aspect","offsetWidth","offsetHeight","zoom","updateProjectionMatrix","rect","getBoundingClientRect","w","h","pointerUp","delta","tooltip","onCheckIntersections","render","_this3","clock","Clock","loop","time","getDelta","requestAnimationFrame","attributes","setFromCamera","intersections","intersectObject","intersection","pointIndex","onPointSelected","_this4","removeChild","pointIndex_","gsap","cursor","o","duration","ease","Power3","easeOut","overwrite","onUpdate","customsize","array","needsUpdate"],"mappings":";;;;;CAMC,SAASA,EAAEC,GAAoB,iBAAVC,SAAoC,oBAATC,OAAqBF,EAAEG,QAAQ,UAA0B,mBAATC,QAAqBA,OAAOC,IAAID,OAAO,CAAC,SAASJ,GAAyDA,GAArDD,EAAsB,oBAAbO,WAAyBA,WAAWP,GAAGQ,MAASC,OAA/M,CAAyNC,MAAK,SAAUC,GAAS,aAAa,SAASC,EAAkBC,EAAQC,GAC/R,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAUlD,SAASO,EAAgBC,EAAKF,EAAKG,GAYjC,OAXIH,KAAOE,EACTJ,OAAOC,eAAeG,EAAKF,EAAK,CAC9BG,MAAOA,EACPR,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZK,EAAIF,GAAOG,EAGND,EClCF,IAAME,EAAe,GAEfC,EAAgB,IAGhBC,GADe,IAAIpB,MAAMqB,QAAQ,EAAG,EAAG,GACtB,KAGjBC,EAAmBC,KAAKC,GAAK,ICN/BC,EAAKF,KAAKC,GACVE,EAASD,EAAK,EAIdE,EAAU,IAAMF,EAChBG,EAAUH,EAAK,IAIfI,EAAQN,KAAKM,MACbC,EAAMP,KAAKO,IAOXC,EAAMR,KAAKQ,IAEXC,EAAOT,KAAKS,KAWhB,SAASC,EAASC,GACvB,OAAQA,EAAIH,EAAIG,EAAI,IAAMA,EChCb,SAAAC,EAASC,EAAGC,GACzB,ID0BmBH,EC1BfI,EAAKF,EAAE,GAAKR,EACZW,EAAKH,EAAE,GAAKR,EACZY,EAAKH,EAAE,GAAKT,EACZa,EAAKJ,EAAE,GAAKT,EACZc,EAAMZ,EAAIS,GACVI,EAAMZ,EAAIQ,GACVK,EAAMd,EAAIW,GACVI,EAAMd,EAAIU,GACVK,EAAMJ,EAAMZ,EAAIQ,GAChBS,EAAML,EAAMX,EAAIO,GAChBU,EAAMJ,EAAMd,EAAIU,GAChBS,EAAML,EAAMb,EAAIS,GAChBU,EAAI,IDcWhB,ECdFF,EAAKC,EAASQ,EAAKF,GAAMG,EAAME,EAAMX,EAASO,EAAKF,KDezD,EAAIZ,EAASQ,GAAK,GAAKR,EAASH,KAAK4B,KAAKjB,ICdjDkB,EAAIrB,EAAImB,GAERG,EAAcH,EAAI,SAASI,GAC7B,IAAIC,EAAIxB,EAAIuB,GAAKJ,GAAKE,EAClBI,EAAIzB,EAAImB,EAAII,GAAKF,EACjBlB,EAAIsB,EAAIV,EAAMS,EAAIP,EAClBS,EAAID,EAAIT,EAAMQ,EAAIN,EAClBS,EAAIF,EAAIb,EAAMY,EAAIV,EACtB,MAAO,CACLhB,EAAM4B,EAAGvB,GAAKP,EACdE,EAAM6B,EAAG1B,EAAKE,EAAIA,EAAIuB,EAAIA,IAAM9B,IAEhC,WACF,MAAO,CAACW,EAAKX,EAASY,EAAKZ,IAK7B,OAFA0B,EAAYM,SAAWT,EAEhBG,EACT,IC/BaO,EAAb,WAEC,SAAAA,EAAYC,EAAQC,GAenB,IAbA,IAAMC,EAAW9D,KAAK8D,SAAW,IAAI/D,EAAAA,kBAAwB,CAI5D8D,MAAOA,EAAME,WAGNC,EAoFH,SAA6BJ,GACnC,IAAMK,EAAWL,EAAO,GAClBM,EAAWN,EAAO,GAClBO,EAASP,EAAO,GAChBQ,EAASR,EAAO,GAEhBS,EAAQC,EAAqBL,EAAUC,EAAUjD,GACjDsD,EAAMD,EAAqBH,EAAQC,EAAQnD,GAC3CuD,GAtBeC,EAsB0B,IAAxBJ,EAAMK,WAAWH,GAtBdI,EH/EO1D,IG+EF2D,EH9EE3D,GG+E1BwD,GAAOE,EAAMA,EAAOF,GAAOG,EAAMA,EAAMH,GAsBxCrB,EAAclB,EAAe,CAACgC,EAAUD,GAAW,CAACG,EAAQD,IAC5DU,EAAYzB,EAAY,KACxB0B,EAAY1B,EAAY,KACxB2B,EAAOT,EAAqBO,EAAU,GAAIA,EAAU,GAAI5D,EAAeuD,GACvEQ,EAAOV,EAAqBQ,EAAU,GAAIA,EAAU,GAAI7D,EAAeuD,GA3BvE,IAAeC,EAAKE,EAAKC,EA4B/B,MAAO,CACNP,MAAAA,EACAE,IAAAA,EACAP,OAAQ,IAAIjE,EAAAA,kBAAwBsE,EAAOU,EAAMC,EAAMT,IArGpCU,CAAoBrB,GAA/BI,OAEFkB,EAAW,IAAInF,EAAAA,eACfoF,EAAS,IAAIC,aAAajE,KAC1BkE,EAAWrB,EAAOsB,UAAUnE,KAEzBd,EAAI,EAAGkF,EAAI,EAAGlF,EAAIgF,EAAS/E,OAAQD,IAAK,CAChD,IAAMmF,EAASH,EAAShF,GACxB8E,EAAOI,KAAOC,EAAOvD,EACrBkD,EAAOI,KAAOC,EAAOhC,EACrB2B,EAAOI,KAAOC,EAAO/B,EAGtByB,EAASO,aAAa,WAAY,IAAI1F,EAAAA,gBAAsBoF,EAAQ,IAEpE,IAAM9E,EAAIL,KAAKK,EAAI,EACnB6E,EAASQ,aAAa,EAAGrF,GAEzBL,KAAK2F,KAAO,IAAI5F,EAAAA,KAAWmF,EAAUpB,GA7BvC,OAAAH,EAAAiC,UAgCCC,SAAA,SAASxF,EAAGyF,EAAGzC,GAEd,IACM0C,GAFN1F,GAASc,GAAqB2E,GAEf,IACXE,EAAO,EACPC,EAAK,EAHK3E,KAAK4E,MAAM7F,EAAC,KAA2B,GAAM,IAK1D4F,EAAKF,EACDA,EAAQ5E,IACX6E,EAAOD,EAAQ5E,EACf8E,EAAK9E,IAGPnB,KAAK2F,KAAKT,SAASQ,aAAaM,EAAMC,IA7CxCtC,EAAA,GAkDawC,EAAb,WAEC,SAAAA,EAAYC,GACX,IAAMC,EAAQrG,KAAKqG,MAAQ,IAAItG,EAAAA,MAEzBuG,EAAQ,GAERC,EAAYH,EAAKI,MAAK,SAAAvE,GAAC,OAAIA,EAAEwE,SAClBL,EAAKM,QAAO,SAAAzE,GAAC,OAAKA,EAAEwE,SAC5BE,SAAQ,SAACC,GACjBN,EAAMO,KAAK,CACVjD,OAAQ,CAAC2C,EAAUO,SAAUP,EAAUQ,UAAWH,EAAEE,SAAUF,EAAEG,WAChElD,MAAO+C,EAAE/C,WAIX7D,KAAKsG,MAAQA,GACEtG,KAAKgH,OAASV,EAAMW,KAAI,SAACC,EAAMnB,GAAP,OAAiB,IAAIpC,EAAMuD,EAAKtD,OAAQsD,EAAKrD,WAC7E8C,SAAQ,SAAA1E,GAAC,OAAIoE,EAAMc,IAAIlF,EAAE0D,SAEhC3F,KAAKK,EAAI,EApBX,OAAA8F,EAAAP,UAuBCC,SAAA,WACC,IAAMxF,EAAIiB,KAAK4E,MAAMlG,KAAKK,IAAM,GAC1BgD,EAAIrD,KAAKgH,OAAO1G,OACtBN,KAAKgH,OAAOL,SAAQ,SAAC1E,EAAG6D,GAAJ,OAAU7D,EAAE4D,SAASxF,EAAGyF,EAAGzC,OA1BjD8C,EAAA,GAmCO,SAAS7B,EAAqB8C,EAAKC,EAAKC,GAC9C,IAAMC,GAAO,GAAKH,GAAO/F,EACnBmG,GAASH,EAAM,KAAOhG,EAC5B,OAAO,IAAItB,EAAAA,SACRuH,EAAShG,KAAKQ,IAAIyF,GAAOjG,KAAKO,IAAI2F,GACpCF,EAAShG,KAAKO,IAAI0F,GAClBD,EAAShG,KAAKQ,IAAIyF,GAAOjG,KAAKQ,IAAI0F,IAuBnC,ICtHYC,EAAb,WAEC,SAAAA,EAAYtH,EAAQuH,EAAcC,EAAcC,GAC/C5H,KAAKG,OAASA,GAAU0H,SACxB7H,KAAK0H,aAAeA,GAAgB,SAASI,GAC5CC,QAAQC,IAAI,uCAAwCF,IAErD9H,KAAK2H,aAAeA,GAAgB,SAASG,GAC5CC,QAAQC,IAAI,uCAAwCF,IAErD9H,KAAK4H,WAAaA,GAAc,SAASE,GACxCC,QAAQC,IAAI,qCAAsCF,IAEnD9H,KAAKiI,UAAW,EAChBjI,KAAKkI,OAdP,IAAAC,EAAAV,EAAA7B,UAAA,OAAAuC,EAiBCD,KAAA,WACClI,KAAKoI,MAAQ,CACZC,SAAU,CAAEpG,EAAG,EAAGuB,EAAG,GACrBE,SAAU,CAAEzB,EAAG,EAAGuB,EAAG,GACrB8E,SAAU,CAAErG,EAAG,EAAGuB,EAAG,GACrB+E,MAAO,CAAEtG,EAAG,EAAGuB,EAAG,GAClBrD,OAAQH,KAAKG,QAEdH,KAAKwI,YAAcxI,KAAKwI,YAAYC,KAAKzI,MACzCA,KAAK0I,YAAc1I,KAAK0I,YAAYD,KAAKzI,MACzCA,KAAK2I,UAAY3I,KAAK2I,UAAUF,KAAKzI,MACrCA,KAAK4I,aAAe5I,KAAK4I,aAAaH,KAAKzI,MAC3CA,KAAK6I,YAAc7I,KAAK6I,YAAYJ,KAAKzI,MACzCA,KAAK8I,WAAa9I,KAAK8I,WAAWL,KAAKzI,MACvCA,KAAKG,OAAO4I,iBAAiB,YAAa/I,KAAKwI,aAAa,GAC5DxI,KAAKG,OAAO4I,iBAAiB,aAAc/I,KAAK4I,cAAc,IAhChET,EAmCCa,OAAA,SAAO/G,EAAGuB,GACTxD,KAAKiJ,KAAO,CAAEhH,EAAAA,EAAGuB,EAAAA,GACjBxD,KAAKqI,SAAW,CAAEpG,EAAAA,EAAGuB,EAAAA,GACrBxD,KAAKsI,SAAW,CAAErG,EAAG,EAAGuB,EAAG,GAC3BxD,KAAK0D,SAAW1D,KAAK0D,UAAY,CAAEzB,EAAG,EAAGuB,EAAG,GAC5CxD,KAAKuI,MAAQ,CAAEtG,EAAG,EAAGuB,EAAG,GACxBxD,KAAK0H,aAAa1H,OAzCpBmI,EA4CCe,OAAA,SAAOjH,EAAGuB,GACTxD,KAAKiI,UAAW,EAChB,IAAMgB,EAAOjJ,KAAKiJ,KACZZ,EAAWrI,KAAKqI,SAChBC,EAAWtI,KAAKsI,SAChBC,EAAQvI,KAAKuI,MAEb7E,GADS1D,KAAKG,OACHH,KAAK0D,UACtBA,EAASzB,EAAIA,EAAIgH,EAAKhH,EACtByB,EAASF,EAAIA,EAAIyF,EAAKzF,EACtB8E,EAASrG,EAAIyB,EAASzB,EAAIkH,OAAOC,WAAa,EAC9Cd,EAAS9E,EAAIE,EAASF,EAAI2F,OAAOE,YAAc,EAG/C,IAAMC,GAAMrH,EAAIoG,EAASpG,GAAKkH,OAAOC,WAAa,EAC5CG,GAAM/F,EAAI6E,EAAS7E,GAAK2F,OAAOE,YAAc,EACnDd,EAAMtG,EAAc,GAAVsG,EAAMtG,EAAUqH,EAC1Bf,EAAM/E,EAAc,GAAV+E,EAAM/E,EAAU+F,EAC1BlB,EAASpG,EAAIA,EACboG,EAAS7E,EAAIA,EACbxD,KAAKsI,SAAWA,EAChB,IAAMF,EAAQpI,KAAKoI,MACnBA,EAAMC,SAASpG,EAAIA,EACnBmG,EAAMC,SAAS7E,EAAIA,EACnB4E,EAAM1E,SAASzB,EAAIyB,EAASzB,EAC5BmG,EAAM1E,SAASF,EAAIE,EAASF,EAC5B4E,EAAME,SAASrG,EAAIqG,EAASrG,EAC5BmG,EAAME,SAAS9E,EAAI8E,EAAS9E,EAC5B4E,EAAMG,MAAMtG,EAAIsG,EAAMtG,EACtBmG,EAAMG,MAAM/E,EAAI+E,EAAM/E,EACtBxD,KAAK2H,aAAaS,IA1EpBD,EA6ECqB,KAAA,SAAKvH,EAAGuB,GACPxD,KAAKiI,UAAW,EAChBjI,KAAK4H,WAAW5H,OA/ElBmI,EAkFCK,YAAA,SAAYV,GACX9H,KAAKG,OAAOsJ,oBAAoB,aAAczJ,KAAK4I,cACnD5I,KAAKgJ,OAAOlB,EAAE4B,QAAS5B,EAAE6B,SACzB3J,KAAK4J,qBArFPzB,EAwFCO,YAAA,SAAYZ,GACX9H,KAAKkJ,OAAOpB,EAAE4B,QAAS5B,EAAE6B,UAzF3BxB,EA4FCQ,UAAA,SAAUb,GACT9H,KAAK6J,uBACL7J,KAAKkJ,OAAOpB,EAAE4B,QAAS5B,EAAE6B,SACzB3J,KAAKwJ,QA/FPrB,EAkGCS,aAAA,SAAad,GACZ9H,KAAKG,OAAOsJ,oBAAoB,YAAazJ,KAAKwI,aAC9CV,EAAEgC,QAAQxJ,OAAS,IACtBwH,EAAEiC,iBACF/J,KAAKgJ,OAAOlB,EAAEgC,QAAQ,GAAGE,MAAOlC,EAAEgC,QAAQ,GAAGG,OAC7CjK,KAAKkK,sBAvGR/B,EA2GCU,YAAA,SAAYf,GACPA,EAAEgC,QAAQxJ,OAAS,IACtBwH,EAAEiC,iBACF/J,KAAKkJ,OAAOpB,EAAEgC,QAAQ,GAAGE,MAAOlC,EAAEgC,QAAQ,GAAGG,SA9GhD9B,EAkHCW,WAAA,SAAWhB,GACV9H,KAAKmK,uBACLnK,KAAKkJ,OAAOlJ,KAAKqI,SAASpG,EAAGjC,KAAKqI,SAAS7E,GAC3CxD,KAAKwJ,QArHPrB,EAwHCyB,kBAAA,WACC/B,SAASkB,iBAAiB,YAAa/I,KAAK0I,aAAa,GACzDb,SAASkB,iBAAiB,UAAW/I,KAAK2I,WAAW,IA1HvDR,EA6HC+B,kBAAA,WACCrC,SAASkB,iBAAiB,WAAY/I,KAAK8I,YAAY,GACvDjB,SAASkB,iBAAiB,YAAa/I,KAAK6I,aAAa,IA/H3DV,EAkIC0B,qBAAA,WACChC,SAAS4B,oBAAoB,YAAazJ,KAAK0I,aAC/Cb,SAAS4B,oBAAoB,UAAWzJ,KAAK2I,YApI/CR,EAuICgC,qBAAA,WACCtC,SAAS4B,oBAAoB,WAAYzJ,KAAK8I,YAC9CjB,SAAS4B,oBAAoB,YAAazJ,KAAK6I,cAzIjDpB,EAAA,GCEa2C,EAAb,WAEC,SAAAA,EAAY9D,GACXtG,KAAKsG,MAAQA,EACb,IAAM+D,EAASD,EAAOE,oBAChBC,EAAU,IAAIxK,MAAMyK,cAAcH,GAClCnF,EAAW,IAAInF,MAAM0K,eACrB3G,EAAW,IAAI/D,MAAM2K,eAAe,CACzCC,KAAMzJ,EACN+F,IAAKsD,EACLK,aAAc7K,MAAM8K,aAEpBC,WAAW,EACXC,aAAa,IAEdjH,EAASkH,gBAAkB,SAAAC,GAC1BA,EAAOC,aAAe,qEAGnBD,EAAOC,aACVD,EAAOC,aAAeD,EAAOC,aAAaC,QAApB,uBAAA,0KAUtBF,EAAOG,eAAiB,kCAEvBH,EAAOG,eACRH,EAAOG,eAAiBH,EAAOG,eAAeD,QAAtB,sCAAA,kGASzB,IAAM9F,EAAW,IAAID,aAA4B,EAAfkB,EAAMhG,QAClC+K,EAAU,IAAIjG,aAA4B,EAAfkB,EAAMhG,QACjCgL,EAAS,IAAIlG,aAA4B,EAAfkB,EAAMhG,QAChCiL,EAAQ,IAAInG,aAAakB,EAAMhG,QAC/BkL,EAAS,IAAIzL,MAAMqB,QACVkF,EAAMW,KAAI,SAAChF,GACzB,OAAOmI,EAAOqB,kBAAkBxJ,EAAE6E,SAAU7E,EAAE8E,ULjDlB9F,SKkD1B0F,SAAQ,SAAC+E,EAAOrL,GAClB,IAAM6G,EAAOZ,EAAMjG,GACnBgF,EAAa,EAAJhF,GAASqL,EAAMzJ,EACxBoD,EAAa,EAAJhF,EAAQ,GAAKqL,EAAMlI,EAC5B6B,EAAa,EAAJhF,EAAQ,GAAKqL,EAAMjI,EAC5B+H,EAAOG,KAAKD,GAAOE,YACnBP,EAAY,EAAJhL,GAASmL,EAAOvJ,EACxBoJ,EAAY,EAAJhL,EAAQ,GAAKmL,EAAOhI,EAC5B6H,EAAY,EAAJhL,EAAQ,GAAKmL,EAAO/H,EAC5B6H,EAAW,EAAJjL,GAAS6G,EAAKrD,MAAMgI,EAC3BP,EAAW,EAAJjL,EAAQ,GAAK6G,EAAKrD,MAAMvE,EAC/BgM,EAAW,EAAJjL,EAAQ,GAAK6G,EAAKrD,MAAMzB,EAC/BmJ,EAAMlL,GAAKa,KAEZgE,EAASO,aAAa,WAAY,IAAI1F,MAAM+L,gBAAgBzG,EAAU,IACtEH,EAASO,aAAa,SAAU,IAAI1F,MAAM+L,gBAAgBT,EAAS,IACnEnG,EAASO,aAAa,QAAS,IAAI1F,MAAM+L,gBAAgBR,EAAQ,IACjEpG,EAASO,aAAa,aAAc,IAAI1F,MAAMgM,uBAAuBR,EAAO,IAC9DvL,KAAKqG,MAAQ,IAAItG,MAAMqK,OAAOlF,EAAUpB,GAnExD,OAAAsG,EAsEQE,kBAAP,WACC,IAAMD,EAASxC,SAASmE,cAAc,UACtC3B,EAAO4B,MAAQ,GACf5B,EAAO6B,OAAS,GAChB,IAAMC,EAAM9B,EAAO+B,WAAW,MACxBC,EAAWF,EAAIG,qBACpBjC,EAAO4B,MAAQ,EACf5B,EAAO6B,OAAS,EAChB,EACA7B,EAAO4B,MAAQ,EACf5B,EAAO6B,OAAS,EAChB7B,EAAO4B,MAAQ,GAQhB,OANAI,EAASE,aAAa,EAAG,uBACzBF,EAASE,aAAa,GAAK,uBAC3BF,EAASE,aAAa,IAAM,uBAC5BF,EAASE,aAAa,EAAG,uBACzBJ,EAAIK,UAAYH,EAChBF,EAAIM,SAAS,EAAG,EAAGpC,EAAO4B,MAAO5B,EAAO6B,QACjC7B,GAzFTD,EA4FQqB,kBAAP,SAAyBrE,EAAKsF,EAAKpF,GAClC,IAAMC,GAAO,GAAKH,IAAQ9F,KAAKC,GAAK,KAC9BiG,GAASkF,EAAM,MAAQpL,KAAKC,GAAK,KACjCU,GAAOqF,EAAUhG,KAAKQ,IAAIyF,GAAOjG,KAAKO,IAAI2F,GAC1C/D,EAAM6D,EAAUhG,KAAKQ,IAAIyF,GAAOjG,KAAKQ,IAAI0F,GACzChE,EAAM8D,EAAUhG,KAAKO,IAAI0F,GAC/B,OAAO,IAAIxH,MAAMqB,QAAQa,EAAGuB,EAAGC,IAlGjC2G,EAAA,GCFauC,EAEZ,SAAYzF,EAAM0F,GACjB,IAAMC,EAAMhF,SAASmE,cAAc,OACnCa,EAAIC,UAAJ,4GAG+B5F,EAAK6F,QAHpC,wFAK4B7F,EAAK8F,MALjC,8CAM+B9F,EAAK+F,QANpC,0eAYAlF,QAAQC,IAAI6E,EAAIK,kBAAmBhG,GACnClH,KAAKmN,QAAUN,EAAIK,kBACnBlN,KAAKmN,QAAQC,cAAc,gBAAgBrE,iBAAiB,SAAS,WACtC,mBAAnB6D,GACVA,QCdJ7M,MAAMsN,MAAMzH,UAAUuB,IAAM,SAASmG,GAEpC,OADAtN,KAAKuN,IAAIvN,KAAKiC,EAAIqL,EAAMrL,EAAGjC,KAAKwD,EAAI8J,EAAM9J,EAAGxD,KAAKyD,EAAI6J,EAAM7J,EAAGzD,KAAKwN,OAC7DxN,MAGD,IAAMyN,EACC,cADDA,EAEJ,UAGT,WAMC,SAAAC,EAAYP,GAASrM,EAAAd,KAAA,QA0Qb,CAAE2N,IAAK,IA1QM7M,EAAAd,KAAA,eA2QN,GA1QdA,KAAKmN,QAAUA,EACfnN,KAAK4N,OARPF,EAEQxF,KAAP,WACC,OAAO2F,MAAMjI,UAAUkI,MAAMC,KAAKlG,SAASmG,iBAAiB,kBAAkB/G,KAAI,SAAAhF,GAAC,OAAI,IAAIyL,EAAMzL,OAHnG,IRAsBgM,EAAaC,EAAYC,EQA/ChG,EAAAuF,EAAA9H,UAAA,OAAAuC,EAWCyF,KAAA,WAAO,IAAAQ,EAAApO,KACAqO,EAAMrO,KAAKmN,QAAQmB,aAAa,YACtCC,MAAMF,GAAKG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAApI,GAOjD,IAAMK,GANNL,EAAOA,EAAKa,KAAI,SAAAhF,GAIf,OAHAA,EAAE6E,SAAW7E,EAAEoG,SAASjB,IACxBnF,EAAE8E,UAAY9E,EAAEoG,SAAShB,IACzBpF,EAAE4B,MAAmB,YAAX5B,EAAE0M,KAAqB,IAAI5O,MAAM6O,MAAV,WAA6B,IAAI7O,MAAM6O,MAAV,WACvD3M,MAEWuE,MAAK,SAAAvE,GAAC,OAAIA,EAAEwE,SACzBoI,EAAUzI,EAAKM,QAAO,SAAAzE,GAAC,OAAKA,EAAEwE,SACpC2H,EAAKhI,KAAO,CAACK,GAAOqI,OAAOD,GAC3BT,EAAKW,kBAvBR5G,EA2BC4G,YAAA,WAAc,IAAAC,EAAAhP,KACPqO,EAAMrO,KAAKmN,QAAQmB,aAAa,gBAChCW,EAAS,IAAIlP,MAAMmP,cACzBD,EAAOE,YAAc,GACrBF,EAAOrB,KAAKS,GAAK,SAAC9D,GAGjByE,EAAKI,aAAe7E,EACpByE,EAAKK,gBAnCRlH,EAuCCkH,UAAA,WACC,IAAMlC,EAAUnN,KAAKmN,QACfmC,EAAOtP,KAAKsP,KAAOnC,EAAQmB,aAAa,eAAiBb,EAAoBA,EAAoBA,EAKjG8B,EAAWvP,KAAKuP,SAAW,IAAIxP,MAAMyP,cAAc,CACxDC,OAAO,EACPC,WAAW,IAGZH,EAASI,QAAQxG,OAAOC,WAAYD,OAAOE,aAC3C8D,EAAQyC,YAAYL,EAASM,YAE7B,IAAMC,EAAQ9P,KAAK8P,MAAQ,IAAI/P,MAAMgQ,MAG/BC,EAAShQ,KAAKgQ,OAAS,IAAIjQ,MAAMkQ,kBAAkB,GAAI9G,OAAOC,WAAaD,OAAOE,YAAa,IAAM,KAC3G2G,EAAO3H,SAASkF,IAAI,EAAG,EAAK,GAC5ByC,EAAOE,GAAK,IAAInQ,MAAMqB,QAAQ,EAAG,GAAI,GACrC4O,EAAOG,OAAO,IAAIpQ,MAAMqB,QAAQ,EAAG,EAAG,IAEtC,IAAMgP,EAAUpQ,KAAKoQ,QAAU,IAAIrQ,MAAMsQ,aAAa,UACtDP,EAAM3I,IAAIiJ,GAEV,IAAME,EAAetQ,KAAKsQ,aAAe,IAAIvQ,MAAMwQ,iBAAiB,SAAU,IAC9ED,EAAajI,SAASkF,IAAI,EAAG,IAAK,GAClCuC,EAAM3I,IAAImJ,GAMU,IAAIvQ,MAAMqB,QAAQ,EAAK,EAAK,GAAhD,IAEMoP,EAAgBxQ,KAAKwQ,cAAgB,IAAIzQ,MAAMsN,MAAM,EAAe,IAAV/L,KAAKC,GAAU,EAAK,OAC9EkP,EAAoBzQ,KAAKyQ,kBAAoB,IAAI1Q,MAAMsN,MAAM,EAAG,EAAG,EAAG,OACtEqD,EAAyB1Q,KAAK0Q,uBAAyB,IAAI3Q,MAAMsN,MAAM,EAAG,EAAG,EAAG,OAChFsD,EAAqB3Q,KAAK2Q,mBAAqB,IAAI5Q,MAAMsN,MAAM,EAAG,EAAG,EAAG,OAExEuD,EAAa5Q,KAAK4Q,WAAa,IAAI7Q,MAAM8Q,MAC/CD,EAAWE,SAASvD,IAAIiD,EAAcvO,EAAGuO,EAAchN,EAAGgN,EAAc/M,GACxEqM,EAAM3I,IAAIyJ,GAEV,IAAMG,EAAQ/Q,KAAK+Q,MAAQ/Q,KAAKgR,SAAShR,KAAKoP,cAC9CwB,EAAWzJ,IAAI4J,GAEf,IAAM5L,EAASnF,KAAKmF,OAAS,IAAIiF,EAAOpK,KAAKoG,MAG7C,GAFAwK,EAAWzJ,IAAIhC,EAAOkB,OAElBiJ,IAAS7B,EAAc,CAC1B,IAAMzG,EAAShH,KAAKgH,OAAS,IAAIb,EAAOnG,KAAKoG,MAC7CwK,EAAWzJ,IAAIH,EAAOX,QAGLrG,KAAKiR,UAAY,IAAIlR,MAAMmR,WACnCC,OAAO/G,OAAOgH,UP7GQ,KO+GhBpR,KAAKqR,QAAU,IAAItR,MAAMuR,QAEzCtR,KAAKuR,SAAWvR,KAAKuR,SAAS9I,KAAKzI,MACnCA,KAAKwR,cAAgBxR,KAAKwR,cAAc/I,KAAKzI,MAC7CA,KAAKyR,YAAczR,KAAKyR,YAAYhJ,KAAKzI,MAEzCmJ,OAAOJ,iBAAiB,SAAU/I,KAAKuR,UAAU,GACjD1J,SAASkB,iBAAiB,cAAe/I,KAAKwR,eAC9C3J,SAASkB,iBAAiB,YAAa/I,KAAKyR,aAGxBzR,KAAK0R,YAAc,IAAIjK,EAAY0F,GAAS,SAAClE,GAChEyH,EAAuB/E,KAAK8E,MAC1B,SAACkB,GACHlB,EAAkB9E,KAAK+E,GAAwBvJ,IAAI,IAAIpH,MAAMsN,MAAM/L,KAAKC,GAAKoQ,EAAKrJ,SAAS9E,EAAI,GAAKlC,KAAKC,GAAKoQ,EAAKrJ,SAASrG,EAAG,EAAG,QAClI0O,EAAmBpD,IAAI,EAAG,EAAG,EAAG,UAC9B,SAAC2C,GACHS,EAAmBpD,IAAIjM,KAAKC,GAAK2O,EAAG3H,MAAM/E,EAAI,GAAKlC,KAAKC,GAAK2O,EAAG3H,MAAMtG,EAAG,EAAG,UAG7EjC,KAAK4R,SACL5R,KAAKuR,WAELvR,KAAKmN,QAAQ0E,UAAU1K,IAAI,SAzH7BgB,EA4HC6I,SAAA,SAASzG,GACR,IAAMrF,EAAW,IAAInF,MAAM+R,eAAe7Q,EAAc,GAAI,IACtD6C,EAAW,IAAI/D,MAAMgS,qBAAqB,CAC/ClO,MAAO,SACPmO,UAAW,GACXC,UAAW,EACXhL,IAAKsD,EACL2H,aAAc3H,IAGf,OADa,IAAIxK,MAAMoS,KAAKjN,EAAUpB,IArIxCqE,EAyICiK,UAAA,SAAUC,GACT,IAAMnN,EAAW,IAAInF,MAAMuS,cAAc,IAAK,KAC9CpN,EAASqN,SAASjR,KAAKC,GAAK,GAC5B,IAAMuC,EAAW,IAAI/D,MAAMyS,eAC3B1O,EAAS2O,QAAU,GACnB,IAAM9M,EAAO,IAAI5F,MAAMoS,KAAKjN,EAAUpB,GAItC,OAHA6B,EAAK0C,SAAS5E,GAAK,GACnBkC,EAAK+M,eAAgB,EACrBL,EAAOlL,IAAIxB,GACJA,GAlJTwC,EAqJCoJ,SAAA,WACC,IAAMpE,EAAUnN,KAAKmN,QACfoC,EAAWvP,KAAKuP,SAChBS,EAAShQ,KAAKgQ,OACdrF,EAAO,CACZsB,MAAO,EACPC,OAAQ,EACRyG,OAAQ,GAEThI,EAAKsB,MAAQkB,EAAQyF,YAMrBjI,EAAKuB,OAASiB,EAAQ0F,aACtBlI,EAAKgI,OAAShI,EAAKsB,MAAQtB,EAAKuB,OAC5BqD,GACHA,EAASI,QAAQhF,EAAKsB,MAAOtB,EAAKuB,QAE/B8D,IACHA,EAAO2C,OAAShI,EAAKgI,OACrB3C,EAAO8C,KAAQ3J,OAAOC,WAAa,IAAO,IAAM,EAChD4G,EAAO+C,2BA5KV5K,EAgLCqJ,cAAA,SAAcpJ,GACb,IAAM4K,EAAOhT,KAAKmN,QAAQ8F,wBACpBhR,EAAImG,EAAMsB,QAAUsJ,EAAK/Q,EACzBuB,EAAI4E,EAAMuB,QAAUqJ,EAAKxP,EACzB0P,EAAIF,EAAK/G,MACTkH,EAAIH,EAAK9G,OACflM,KAAKqR,QAAQpP,EAAKA,EAAIiR,EAAK,EAAI,EAC/BlT,KAAKqR,QAAQ7N,GAAMA,EAAI2P,EAAK,EAAI,GAvLlChL,EA0LCsJ,YAAA,SAAYrJ,GACX,IAAM4K,EAAOhT,KAAKmN,QAAQ8F,wBACpBhR,EAAImG,EAAMsB,QAAUsJ,EAAK/Q,EACzBuB,EAAI4E,EAAMuB,QAAUqJ,EAAKxP,EACzB0P,EAAIF,EAAK/G,MACTkH,EAAIH,EAAK9G,OACflM,KAAKqR,QAAQpP,EAAKA,EAAIiR,EAAK,EAAI,EAC/BlT,KAAKqR,QAAQ7N,GAAMA,EAAI2P,EAAK,EAAI,EAChCnT,KAAKoT,WAAY,GAlMnBjL,EA4NCtC,SAAA,SAASwN,GACY,MAAhBrT,KAAKsT,UACHtT,KAAK0R,YAAYzJ,WACrBjI,KAAKwQ,cAAcvO,GAAKjC,KAAK2Q,mBAAmB1O,EAChDjC,KAAKwQ,cAAchN,GAAKxD,KAAK2Q,mBAAmBnN,EAChDxD,KAAK2Q,mBAAmB1O,IAAM,EAASjC,KAAK2Q,mBAAmB1O,GAAK,GACpEjC,KAAK2Q,mBAAmBnN,IAAM,KAASxD,KAAK2Q,mBAAmBnN,GAAK,IAErExD,KAAK4Q,WAAWE,SAASnF,KAAK3L,KAAKwQ,eAAerJ,IAAInH,KAAKyQ,mBACvDzQ,KAAKsP,OAAS7B,GACjBzN,KAAKgH,OAAOnB,WAWb7F,KAAKuT,wBAENvT,KAAKuP,SAASiE,OAAOxT,KAAK8P,MAAO9P,KAAKgQ,SAnPxC7H,EAuPCyJ,OAAA,WAAS,IAAA6B,EAAAzT,KACF0T,EAAQ,IAAI3T,MAAM4T,OACX,SAAPC,EAAQC,GACb,IAAMR,EAAQK,EAAMI,WACpBL,EAAK5N,SAASwN,GACdlK,OAAO4K,sBAAsBH,GAE9BA,IA9PFzL,EAiQCoL,qBAAA,WACC,GAAIvT,KAAKsP,OAAS7B,EAAmB,CACpC,IAAMtI,EAASnF,KAAKmF,OAAOkB,MAGrB4K,GAFW9L,EAAOD,SACI8O,WACVhU,KAAKiR,WACjBI,EAAUrR,KAAKqR,QACfrB,EAAShQ,KAAKgQ,OACpBiB,EAAUgD,cAAc5C,EAASrB,GACjC,IAAMkE,EAAgBjD,EAAUkD,gBAAgBhP,GAC1CiP,EAAgBF,EAAc5T,OAAU,EAAI4T,EAAc,GAAK,KACrElU,KAAKqU,WAAaD,EAAeA,EAAarO,OAAS,IA5Q1DoC,EAwTCmM,gBAAA,SAAgBvO,GAAO,IAAAwO,EAAAvU,KACtB,IAAe,IAAX+F,EAAc,CACjB,IAAMmB,EAAOlH,KAAKoG,KAAKL,GACjBuN,EAAUtT,KAAKsT,QAAU,IAAI3G,EAAQzF,GAAM,WAChDqN,EAAKpH,QAAQqH,YAAYlB,EAAQnG,SACjCoH,EAAKjB,QAAU,QAEhBtT,KAAKmN,QAAQyC,YAAY0D,EAAQnG,SACjCpF,QAAQC,IAAI,kBAAmBjC,EAAO/F,KAAKsT,SACF,mBAA9BnK,OAAM,iBAChBA,OAAOmL,gBAAgBpN,EAAMnB,KRlUXkI,EQAtBP,GRAmCQ,EQAnC,CAAA,CAAArN,IAAA,aAAA0M,IAkRC,SAAe8G,GACd,GAAIrU,KAAKyU,cAAgBJ,EAAY,CACpCrU,KAAKyU,YAAcJ,EACnB,IAEML,EAFShU,KAAKmF,OAAOkB,MACHnB,SACI8O,WAO5BU,KAAKnH,IAAIvN,KAAKmN,QAAS,CAAEwH,QAAwB,IAAhBN,EAAoB,UAAY,SACjE,IAAMO,EAAI5U,KAAK0L,MACfkJ,EAAEjH,IAAM,EACR+G,KAAKzO,GAAG2O,EAAG,CACVjH,IAAK,EACLkH,SAAU,GACVC,KAAMC,OAAOC,QACbC,UAAW,MACXC,SAAU,WACT,IAAK,IAAI7U,EAAI,EAAGgD,EAAI2Q,EAAWmB,WAAWC,MAAM9U,OAAQD,EAAIgD,EAAGhD,IAC1DA,IAAMgU,EACTL,EAAWmB,WAAWC,MAAM/U,GAAKa,GAAiB,EAAI,EAAI0T,EAAEjH,KAClDqG,EAAWmB,WAAWC,MAAM/U,GAAKa,IAC3C8S,EAAWmB,WAAWC,MAAM/U,GAAKa,GAGnC8S,EAAWmB,WAAWE,aAAc,KAInCrV,KAAKoT,YACRpT,KAAKoT,WAAY,EACjBpT,KAAKsU,gBAAgBD,SRnTNnU,EAAkB+N,EAAYrI,UAAWsI,GACrDC,GAAajO,EAAkB+N,EAAaE,GQFlDT,GAAA,GCdqBxF","file":"docs\\js\\main.min.js","sourcesContent":[null,"export const GLOBE_RADIUS = 0.6;\r\nexport const PARTICLE_RADIUS = GLOBE_RADIUS + 0.001;\r\nexport const PARTICLE_SIZE = 0.03;\r\nexport const PARTICLE_THRESHOLD = 0.015;\r\nexport const GLOBE_CENTER = new THREE.Vector3(0, 0, 0);\r\nexport const CURVE_SEGMENTS = 128;\r\nexport const CURVE_MIN_ALTITUDE = GLOBE_RADIUS / 10;\r\nexport const CURVE_MAX_ALTITUDE = GLOBE_RADIUS;\r\nexport const DEGREE_TO_RADIAN = Math.PI / 180;\r\nexport const PI_TWO = Math.PI * 2;\r\nexport const PI_HALF = Math.PI / 2;\r\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import { geoInterpolate } from 'd3-geo';\r\nimport * as THREE from 'three';\r\nimport { CURVE_MAX_ALTITUDE, CURVE_MIN_ALTITUDE, CURVE_SEGMENTS, DEGREE_TO_RADIAN, GLOBE_RADIUS } from './constants';\r\n\r\nexport class Curve {\r\n\r\n\tconstructor(coords, color) {\r\n\r\n\t\tconst material = this.material = new THREE.MeshBasicMaterial({\r\n\t\t\t// blending: THREE.AdditiveBlending,\r\n\t\t\t// opacity: 1,\r\n\t\t\t// transparent: true,\r\n\t\t\tcolor: color.getHex(),\r\n\t\t});\r\n\r\n\t\tconst { spline } = getSplineFromCoords(coords);\r\n\r\n\t\tconst geometry = new THREE.BufferGeometry();\r\n\t\tconst points = new Float32Array(CURVE_SEGMENTS * 3);\r\n\t\tconst vertices = spline.getPoints(CURVE_SEGMENTS - 1);\r\n\r\n\t\tfor (let i = 0, j = 0; i < vertices.length; i++) {\r\n\t\t\tconst vertex = vertices[i];\r\n\t\t\tpoints[j++] = vertex.x;\r\n\t\t\tpoints[j++] = vertex.y;\r\n\t\t\tpoints[j++] = vertex.z;\r\n\t\t}\r\n\r\n\t\tgeometry.setAttribute('position', new THREE.BufferAttribute(points, 3));\r\n\r\n\t\tconst i = this.i = 0;\r\n\t\tgeometry.setDrawRange(0, i);\r\n\r\n\t\tthis.mesh = new THREE.Line(geometry, material);\r\n\t}\r\n\r\n\tonRender(i, c, t) {\r\n\t\ti = (i + CURVE_SEGMENTS / 2 * c);\r\n\t\tconst pause = Math.floor(i / (CURVE_SEGMENTS * 2)) % 7 !== 0;\r\n\t\tconst index = i % (CURVE_SEGMENTS * 2);\r\n\t\tlet from = 0;\r\n\t\tlet to = 0;\r\n\t\tif (!pause) {\r\n\t\t\tto = index;\r\n\t\t\tif (index > CURVE_SEGMENTS) {\r\n\t\t\t\tfrom = index - CURVE_SEGMENTS;\r\n\t\t\t\tto = CURVE_SEGMENTS;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.mesh.geometry.setDrawRange(from, to);\r\n\t}\r\n\r\n}\r\n\r\nexport class Curves {\r\n\r\n\tconstructor(data) {\r\n\t\tconst group = this.group = new THREE.Group();\r\n\r\n\t\tconst items = [];\r\n\r\n\t\tconst fromPoint = data.find(x => x.italy);\r\n\t\tconst toPoints = data.filter(x => !x.italy);\r\n\t\ttoPoints.forEach((p) => {\r\n\t\t\titems.push({\r\n\t\t\t\tcoords: [fromPoint.latitude, fromPoint.longitude, p.latitude, p.longitude],\r\n\t\t\t\tcolor: p.color,\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.items = items;\r\n\t\tconst curves = this.curves = items.map((item, index) => new Curve(item.coords, item.color));\r\n\t\tcurves.forEach(x => group.add(x.mesh));\r\n\r\n\t\tthis.i = 0;\r\n\t}\r\n\r\n\tonRender() {\r\n\t\tconst i = Math.floor(this.i++ / 5);\r\n\t\tconst t = this.curves.length;\r\n\t\tthis.curves.forEach((x, c) => x.onRender(i, c, t));\r\n\t}\r\n\r\n}\r\n\r\nexport function clamp(num, min, max) {\r\n\treturn num <= min ? min : (num >= max ? max : num);\r\n}\r\n\r\nexport function coordinateToPosition(lat, lng, radius) {\r\n\tconst phi = (90 - lat) * DEGREE_TO_RADIAN;\r\n\tconst theta = (lng + 180) * DEGREE_TO_RADIAN;\r\n\treturn new THREE.Vector3(\r\n\t\t- radius * Math.sin(phi) * Math.cos(theta),\r\n\t\tradius * Math.cos(phi),\r\n\t\tradius * Math.sin(phi) * Math.sin(theta)\r\n\t);\r\n}\r\n\r\nexport function getSplineFromCoords(coords) {\r\n\tconst startLat = coords[0];\r\n\tconst startLng = coords[1];\r\n\tconst endLat = coords[2];\r\n\tconst endLng = coords[3];\r\n\t// spline vertices\r\n\tconst start = coordinateToPosition(startLat, startLng, GLOBE_RADIUS);\r\n\tconst end = coordinateToPosition(endLat, endLng, GLOBE_RADIUS);\r\n\tconst altitude = clamp(start.distanceTo(end) * .75, CURVE_MIN_ALTITUDE, CURVE_MAX_ALTITUDE);\r\n\tconst interpolate = geoInterpolate([startLng, startLat], [endLng, endLat]);\r\n\tconst midCoord1 = interpolate(0.25);\r\n\tconst midCoord2 = interpolate(0.75);\r\n\tconst mid1 = coordinateToPosition(midCoord1[1], midCoord1[0], GLOBE_RADIUS + altitude);\r\n\tconst mid2 = coordinateToPosition(midCoord2[1], midCoord2[0], GLOBE_RADIUS + altitude);\r\n\treturn {\r\n\t\tstart,\r\n\t\tend,\r\n\t\tspline: new THREE.CubicBezierCurve3(start, mid1, mid2, end),\r\n\t};\r\n}\r\n\r\n\r\n","export class DragService {\r\n\r\n\tconstructor(target, downCallback, moveCallback, upCallback) {\r\n\t\tthis.target = target || document;\r\n\t\tthis.downCallback = downCallback || function(e) {\r\n\t\t\tconsole.log('DragListener.downCallback not setted', e);\r\n\t\t};\r\n\t\tthis.moveCallback = moveCallback || function(e) {\r\n\t\t\tconsole.log('DragListener.moveCallback not setted', e);\r\n\t\t};\r\n\t\tthis.upCallback = upCallback || function(e) {\r\n\t\t\tconsole.log('DragListener.upCallback not setted', e);\r\n\t\t};\r\n\t\tthis.dragging = false;\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.event = {\r\n\t\t\tposition: { x: 0, y: 0 },\r\n\t\t\tdistance: { x: 0, y: 0 },\r\n\t\t\tstrength: { x: 0, y: 0 },\r\n\t\t\tspeed: { x: 0, y: 0 },\r\n\t\t\ttarget: this.target,\r\n\t\t};\r\n\t\tthis.onMouseDown = this.onMouseDown.bind(this);\r\n\t\tthis.onMouseMove = this.onMouseMove.bind(this);\r\n\t\tthis.onMouseUp = this.onMouseUp.bind(this);\r\n\t\tthis.onTouchStart = this.onTouchStart.bind(this);\r\n\t\tthis.onTouchMove = this.onTouchMove.bind(this);\r\n\t\tthis.onTouchEnd = this.onTouchEnd.bind(this);\r\n\t\tthis.target.addEventListener('mousedown', this.onMouseDown, false);\r\n\t\tthis.target.addEventListener('touchstart', this.onTouchStart, false);\r\n\t}\r\n\r\n\tonDown(x, y) {\r\n\t\tthis.down = { x, y };\r\n\t\tthis.position = { x, y };\r\n\t\tthis.strength = { x: 0, y: 0 };\r\n\t\tthis.distance = this.distance || { x: 0, y: 0 };\r\n\t\tthis.speed = { x: 0, y: 0 };\r\n\t\tthis.downCallback(this);\r\n\t}\r\n\r\n\tonDrag(x, y) {\r\n\t\tthis.dragging = true;\r\n\t\tconst down = this.down;\r\n\t\tconst position = this.position;\r\n\t\tconst strength = this.strength;\r\n\t\tconst speed = this.speed;\r\n\t\tconst target = this.target;\r\n\t\tconst distance = this.distance;\r\n\t\tdistance.x = x - down.x;\r\n\t\tdistance.y = y - down.y;\r\n\t\tstrength.x = distance.x / window.innerWidth * 2;\r\n\t\tstrength.y = distance.y / window.innerHeight * 2;\r\n\t\t// speed.x += (strength.x - this.strength.x) * 0.1;\r\n\t\t// speed.y += (strength.y - this.strength.y) * 0.1;\r\n\t\tconst sx = (x - position.x) / window.innerWidth * 2;\r\n\t\tconst sy = (y - position.y) / window.innerHeight * 2;\r\n\t\tspeed.x = speed.x * 0.5 + sx;\r\n\t\tspeed.y = speed.y * 0.5 + sy;\r\n\t\tposition.x = x;\r\n\t\tposition.y = y;\r\n\t\tthis.strength = strength;\r\n\t\tconst event = this.event;\r\n\t\tevent.position.x = x;\r\n\t\tevent.position.y = y;\r\n\t\tevent.distance.x = distance.x;\r\n\t\tevent.distance.y = distance.y;\r\n\t\tevent.strength.x = strength.x;\r\n\t\tevent.strength.y = strength.y;\r\n\t\tevent.speed.x = speed.x;\r\n\t\tevent.speed.y = speed.y;\r\n\t\tthis.moveCallback(event);\r\n\t}\r\n\r\n\tonUp(x, y) {\r\n\t\tthis.dragging = false;\r\n\t\tthis.upCallback(this);\r\n\t}\r\n\r\n\tonMouseDown(e) {\r\n\t\tthis.target.removeEventListener('touchstart', this.onTouchStart);\r\n\t\tthis.onDown(e.clientX, e.clientY);\r\n\t\tthis.addMouseListeners();\r\n\t}\r\n\r\n\tonMouseMove(e) {\r\n\t\tthis.onDrag(e.clientX, e.clientY);\r\n\t}\r\n\r\n\tonMouseUp(e) {\r\n\t\tthis.removeMouseListeners();\r\n\t\tthis.onDrag(e.clientX, e.clientY);\r\n\t\tthis.onUp();\r\n\t}\r\n\r\n\tonTouchStart(e) {\r\n\t\tthis.target.removeEventListener('mousedown', this.onMouseDown);\r\n\t\tif (e.touches.length > 0) {\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.onDown(e.touches[0].pageX, e.touches[0].pageY);\r\n\t\t\tthis.addTouchListeners();\r\n\t\t}\r\n\t}\r\n\r\n\tonTouchMove(e) {\r\n\t\tif (e.touches.length > 0) {\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.onDrag(e.touches[0].pageX, e.touches[0].pageY);\r\n\t\t}\r\n\t}\r\n\r\n\tonTouchEnd(e) {\r\n\t\tthis.removeTouchListeners();\r\n\t\tthis.onDrag(this.position.x, this.position.y);\r\n\t\tthis.onUp();\r\n\t}\r\n\r\n\taddMouseListeners() {\r\n\t\tdocument.addEventListener('mousemove', this.onMouseMove, false);\r\n\t\tdocument.addEventListener('mouseup', this.onMouseUp, false);\r\n\t}\r\n\r\n\taddTouchListeners() {\r\n\t\tdocument.addEventListener('touchend', this.onTouchEnd, false);\r\n\t\tdocument.addEventListener('touchmove', this.onTouchMove, false);\r\n\t}\r\n\r\n\tremoveMouseListeners() {\r\n\t\tdocument.removeEventListener('mousemove', this.onMouseMove);\r\n\t\tdocument.removeEventListener('mouseup', this.onMouseUp);\r\n\t}\r\n\r\n\tremoveTouchListeners() {\r\n\t\tdocument.removeEventListener('touchend', this.onTouchEnd);\r\n\t\tdocument.removeEventListener('touchmove', this.onTouchMove);\r\n\t}\r\n}\r\n","import { PARTICLE_RADIUS, PARTICLE_SIZE } from './constants';\r\n\r\nexport class Points {\r\n\r\n\tconstructor(items) {\r\n\t\tthis.items = items;\r\n\t\tconst canvas = Points.getParticleCanvas();\r\n\t\tconst texture = new THREE.CanvasTexture(canvas);\r\n\t\tconst geometry = new THREE.BufferGeometry();\r\n\t\tconst material = new THREE.PointsMaterial({\r\n\t\t\tsize: PARTICLE_SIZE,\r\n\t\t\tmap: texture,\r\n\t\t\tvertexColors: THREE.VertexColors,\r\n\t\t\t// blending: THREE.AdditiveBlending,\r\n\t\t\tdepthTest: false,\r\n\t\t\ttransparent: true\r\n\t\t});\r\n\t\tmaterial.onBeforeCompile = shader => {\r\n\t\t\tshader.vertexShader = `\r\n\t\t\tattribute float customsize;\r\n  varying float vVisible;\r\n  ` + shader.vertexShader;\r\n\t\t\tshader.vertexShader = shader.vertexShader.replace(\r\n\t\t\t\t`gl_PointSize = size;`,\r\n\t\t\t\t`\r\n    vec3 vNormal = normalMatrix * normal;\r\n    vVisible = step( 0., dot( -normalize(mvPosition.xyz), normalize(vNormal) ) );\r\n\r\n    gl_PointSize = customsize;\r\n    `\r\n\t\t\t);\r\n\t\t\t// console.log(shader.vertexShader);\r\n\t\t\tshader.fragmentShader = `\r\n    varying float vVisible;\r\n` + shader.fragmentShader;\r\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace(\r\n\t\t\t\t`#include <clipping_planes_fragment>`,\r\n\t\t\t\t`\r\n    if ( floor(vVisible + 0.1) == 0.0 ) discard;\r\n    #include <clipping_planes_fragment>\r\n`\r\n\t\t\t);\r\n\t\t\t// console.log(shader.fragmentShader);\r\n\t\t}\r\n\t\tconst vertices = new Float32Array(items.length * 3);\r\n\t\tconst normals = new Float32Array(items.length * 3);\r\n\t\tconst colors = new Float32Array(items.length * 3);\r\n\t\tconst sizes = new Float32Array(items.length);\r\n\t\tconst normal = new THREE.Vector3();\r\n\t\tconst points = items.map((x) => {\r\n\t\t\treturn Points.getLatLonToVector(x.latitude, x.longitude, PARTICLE_RADIUS);\r\n\t\t}).forEach((point, i) => {\r\n\t\t\tconst item = items[i];\r\n\t\t\tvertices[i * 3] = point.x;\r\n\t\t\tvertices[i * 3 + 1] = point.y;\r\n\t\t\tvertices[i * 3 + 2] = point.z;\r\n\t\t\tnormal.copy(point).normalize();\r\n\t\t\tnormals[i * 3] = normal.x;\r\n\t\t\tnormals[i * 3 + 1] = normal.y;\r\n\t\t\tnormals[i * 3 + 2] = normal.z;\r\n\t\t\tcolors[i * 3] = item.color.r;\r\n\t\t\tcolors[i * 3 + 1] = item.color.g;\r\n\t\t\tcolors[i * 3 + 2] = item.color.b;\r\n\t\t\tsizes[i] = PARTICLE_SIZE;\r\n\t\t});\r\n\t\tgeometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\r\n\t\tgeometry.setAttribute('normal', new THREE.BufferAttribute(normals, 3));\r\n\t\tgeometry.setAttribute('color', new THREE.BufferAttribute(colors, 3));\r\n\t\tgeometry.setAttribute('customsize', new THREE.Float32BufferAttribute(sizes, 1));\r\n\t\tconst group = this.group = new THREE.Points(geometry, material);\r\n\t}\r\n\r\n\tstatic getParticleCanvas() {\r\n\t\tconst canvas = document.createElement('canvas');\r\n\t\tcanvas.width = 64;\r\n\t\tcanvas.height = 64;\r\n\t\tconst ctx = canvas.getContext('2d');\r\n\t\tconst gradient = ctx.createRadialGradient(\r\n\t\t\tcanvas.width / 2,\r\n\t\t\tcanvas.height / 2,\r\n\t\t\t0,\r\n\t\t\tcanvas.width / 2,\r\n\t\t\tcanvas.height / 2,\r\n\t\t\tcanvas.width / 2\r\n\t\t);\r\n\t\tgradient.addColorStop(0, 'rgba(255,255,255,1)');\r\n\t\tgradient.addColorStop(0.9, 'rgba(255,255,255,1)');\r\n\t\tgradient.addColorStop(0.91, 'rgba(255,255,255,0)');\r\n\t\tgradient.addColorStop(1, 'rgba(255,255,255,0)');\r\n\t\tctx.fillStyle = gradient;\r\n\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\tstatic getLatLonToVector(lat, lon, radius) {\r\n\t\tconst phi = (90 - lat) * (Math.PI / 180);\r\n\t\tconst theta = (lon + 180) * (Math.PI / 180);\r\n\t\tconst x = -((radius) * Math.sin(phi) * Math.cos(theta));\r\n\t\tconst z = ((radius) * Math.sin(phi) * Math.sin(theta));\r\n\t\tconst y = ((radius) * Math.cos(phi));\r\n\t\treturn new THREE.Vector3(x, y, z);\r\n\t}\r\n\r\n}\r\n","export class Tooltip {\r\n\r\n\tconstructor(item, removeCallback) {\r\n\t\tconst div = document.createElement('div');\r\n\t\tdiv.innerHTML = `\r\n\t\t<div class=\"card--address\">\r\n\t\t\t<div class=\"card__content\">\r\n\t\t\t\t<div class=\"card__country\">${item.country}</div>\r\n\t\t\t\t<div class=\"card__city\">Sueca</div>\r\n\t\t\t\t<div class=\"card__name\">${item.title}</div>\r\n\t\t\t\t<div class=\"card__address\">${item.address}</div>\r\n\t\t\t\t<a class=\"card__phone\" href=\"tel:0034961702100\">Ph. +34 96 1702100</a>\r\n\t\t\t\t<a class=\"card__email\" href=\"mailto:www.sipcaminagra.es\">www.sipcaminagra.es</a>\r\n\t\t\t</div>\r\n\t\t\t<button class=\"card__close\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M23.954 21.03l-9.184-9.095 9.092-9.174-2.832-2.807-9.09 9.179-9.176-9.088-2.81 2.81 9.186 9.105-9.095 9.184 2.81 2.81 9.112-9.192 9.18 9.1z\"/></svg></button>\r\n\t\t</div>`;\r\n\t\tconsole.log(div.firstElementChild, item);\r\n\t\tthis.element = div.firstElementChild;\r\n\t\tthis.element.querySelector('.card__close').addEventListener('click', () => {\r\n\t\t\tif (typeof removeCallback === 'function') {\r\n\t\t\t\tremoveCallback();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","import { GLOBE_RADIUS, PARTICLE_SIZE, PARTICLE_THRESHOLD } from './constants';\r\nimport { Curves } from './curves';\r\nimport { DragService } from './drag.service';\r\nimport { Points } from './points';\r\nimport { Tooltip } from './tooltip';\r\n\r\nTHREE.Euler.prototype.add = function(euler) {\r\n\tthis.set(this.x + euler.x, this.y + euler.y, this.z + euler.z, this.order);\r\n\treturn this;\r\n};\r\n\r\nexport const Modes = {\r\n\tInteractive: 'interactive',\r\n\tCurves: 'curves',\r\n};\r\n\r\nexport class Globe {\r\n\r\n\tstatic init() {\r\n\t\treturn Array.prototype.slice.call(document.querySelectorAll('.group--globe')).map(x => new Globe(x));\r\n\t}\r\n\r\n\tconstructor(element) {\r\n\t\tthis.element = element;\r\n\t\tthis.load();\r\n\t}\r\n\r\n\tload() {\r\n\t\tconst src = this.element.getAttribute('data-src');\r\n\t\tfetch(src).then(response => response.json()).then(data => {\r\n\t\t\tdata = data.map(x => {\r\n\t\t\t\tx.latitude = x.position.lat;\r\n\t\t\t\tx.longitude = x.position.lng;\r\n\t\t\t\tx.color = x.type === 'company' ? new THREE.Color(`#00833e`) : new THREE.Color(`#283583`);\r\n\t\t\t\treturn x;\r\n\t\t\t});\r\n\t\t\tconst italy = data.find(x => x.italy);\r\n\t\t\tconst foreign = data.filter(x => !x.italy);\r\n\t\t\tthis.data = [italy].concat(foreign);\r\n\t\t\tthis.loadTexture();\r\n\t\t})\r\n\t}\r\n\r\n\tloadTexture() {\r\n\t\tconst src = this.element.getAttribute('data-texture');\r\n\t\tconst loader = new THREE.TextureLoader();\r\n\t\tloader.crossOrigin = '';\r\n\t\tloader.load(src, (texture) => {\r\n\t\t\t// texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\r\n\t\t\t// texture.repeat.set(2, 2);\r\n\t\t\tthis.globeTexture = texture;\r\n\t\t\tthis.initScene();\r\n\t\t});\r\n\t}\r\n\r\n\tinitScene() {\r\n\t\tconst element = this.element;\r\n\t\tconst mode = this.mode = element.getAttribute('data-mode') === Modes.Interactive ? Modes.Interactive : Modes.Curves;\r\n\r\n\t\t// this.mouse = { x: 0, y: 0 };\r\n\t\t// this.parallax = { x: 0, y: 0 };\r\n\r\n\t\tconst renderer = this.renderer = new THREE.WebGLRenderer({\r\n\t\t\talpha: true,\r\n\t\t\tantialias: true\r\n\t\t});\r\n\t\t// renderer.shadowMap.enabled = true;\r\n\t\trenderer.setSize(window.innerWidth, window.innerHeight);\r\n\t\telement.appendChild(renderer.domElement);\r\n\r\n\t\tconst scene = this.scene = new THREE.Scene();\r\n\t\t// scene.fog = new THREE.FogExp2(0x000000, 0.1); // new THREE.Fog(0x000000, 0, 10);\r\n\r\n\t\tconst camera = this.camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.01, 100);\r\n\t\tcamera.position.set(0, 1.0, 2.0);\r\n\t\tcamera.up = new THREE.Vector3(0, 0, -1);\r\n\t\tcamera.lookAt(new THREE.Vector3(0, 0, 0));\r\n\r\n\t\tconst ambient = this.ambient = new THREE.AmbientLight(0x999696);\r\n\t\tscene.add(ambient);\r\n\r\n\t\tconst directional1 = this.directional1 = new THREE.DirectionalLight(0xfffbfb, 0.5);\r\n\t\tdirectional1.position.set(0, 1.5, 1);\r\n\t\tscene.add(directional1);\r\n\r\n\t\t// const directional2 = this.directional2 = new THREE.DirectionalLight(0xfffbfb, 0.2);\r\n\t\t// directional2.position.set(0, -2, -1);\r\n\t\t// scene.add(directional2);\r\n\r\n\t\tconst particleRef = new THREE.Vector3(0.0, 0.0, 1.0);\r\n\r\n\t\tconst globeRotation = this.globeRotation = new THREE.Euler(0.0, Math.PI * 1.2, 0.0, 'XYZ');\r\n\t\tconst globeDragRotation = this.globeDragRotation = new THREE.Euler(0, 0, 0, 'XYZ');\r\n\t\tconst globeStartDragRotation = this.globeStartDragRotation = new THREE.Euler(0, 0, 0, 'XYZ');\r\n\t\tconst globeSpeedRotation = this.globeSpeedRotation = new THREE.Euler(0, 0, 0, 'XYZ');\r\n\r\n\t\tconst globeGroup = this.globeGroup = new THREE.Group();\r\n\t\tglobeGroup.rotation.set(globeRotation.x, globeRotation.y, globeRotation.z);\r\n\t\tscene.add(globeGroup);\r\n\r\n\t\tconst globe = this.globe = this.getGlobe(this.globeTexture);\r\n\t\tglobeGroup.add(globe);\r\n\r\n\t\tconst points = this.points = new Points(this.data);\r\n\t\tglobeGroup.add(points.group);\r\n\r\n\t\tif (mode === Modes.Curves) {\r\n\t\t\tconst curves = this.curves = new Curves(this.data);\r\n\t\t\tglobeGroup.add(curves.group);\r\n\t\t}\r\n\r\n\t\tconst raycaster = this.raycaster = new THREE.Raycaster();\r\n\t\traycaster.params.Points.threshold = PARTICLE_THRESHOLD;\r\n\r\n\t\tconst pointer = this.pointer = new THREE.Vector2();\r\n\r\n\t\tthis.onResize = this.onResize.bind(this);\r\n\t\tthis.onPointerMove = this.onPointerMove.bind(this);\r\n\t\tthis.onPointerUp = this.onPointerUp.bind(this);\r\n\r\n\t\twindow.addEventListener('resize', this.onResize, false);\r\n\t\tdocument.addEventListener('pointermove', this.onPointerMove);\r\n\t\tdocument.addEventListener('pointerup', this.onPointerUp);\r\n\t\t// document.addEventListener('mousemove', onMouseMove, false);\r\n\r\n\t\tconst dragService = this.dragService = new DragService(element, (down) => {\r\n\t\t\tglobeStartDragRotation.copy(globeDragRotation);\r\n\t\t}, (move) => {\r\n\t\t\tglobeDragRotation.copy(globeStartDragRotation).add(new THREE.Euler(Math.PI * move.strength.y * 0.5, Math.PI * move.strength.x, 0, 'XYZ'));\r\n\t\t\tglobeSpeedRotation.set(0, 0, 0, 'XYZ');\r\n\t\t}, (up) => {\r\n\t\t\tglobeSpeedRotation.set(Math.PI * up.speed.y * 0.5, Math.PI * up.speed.x, 0, 'XYZ');\r\n\t\t});\r\n\r\n\t\tthis.onPlay();\r\n\t\tthis.onResize();\r\n\r\n\t\tthis.element.classList.add('init');\r\n\t}\r\n\r\n\tgetGlobe(texture) {\r\n\t\tconst geometry = new THREE.SphereGeometry(GLOBE_RADIUS, 48, 48);\r\n\t\tconst material = new THREE.MeshStandardMaterial({\r\n\t\t\tcolor: 0xffffff,\r\n\t\t\troughness: 0.8,\r\n\t\t\tmetalness: 0.0,\r\n\t\t\tmap: texture,\r\n\t\t\troughnessMap: texture,\r\n\t\t});\r\n\t\tconst mesh = new THREE.Mesh(geometry, material);\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\taddShadow(parent) {\r\n\t\tconst geometry = new THREE.PlaneGeometry(100, 100);\r\n\t\tgeometry.rotateX(-Math.PI / 4);\r\n\t\tconst material = new THREE.ShadowMaterial();\r\n\t\tmaterial.opacity = 0.2;\r\n\t\tconst mesh = new THREE.Mesh(geometry, material);\r\n\t\tmesh.position.z = -0.6;\r\n\t\tmesh.receiveShadow = true;\r\n\t\tparent.add(mesh);\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\tonResize() {\r\n\t\tconst element = this.element;\r\n\t\tconst renderer = this.renderer;\r\n\t\tconst camera = this.camera;\r\n\t\tconst size = {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 0,\r\n\t\t\taspect: 0,\r\n\t\t};\r\n\t\tsize.width = element.offsetWidth;\r\n\t\t/*\r\n\t\tgsap.set(element, {\r\n\t\t\theight: element.offsetWidth < 1024 ? element.offsetWidth * 0.9 : element.offsetWidth * 0.6\r\n\t\t});\r\n\t\t*/\r\n\t\tsize.height = element.offsetHeight;\r\n\t\tsize.aspect = size.width / size.height;\r\n\t\tif (renderer) {\r\n\t\t\trenderer.setSize(size.width, size.height);\r\n\t\t}\r\n\t\tif (camera) {\r\n\t\t\tcamera.aspect = size.aspect;\r\n\t\t\tcamera.zoom = (window.innerWidth < 768) ? 1.3 : 1;\r\n\t\t\tcamera.updateProjectionMatrix();\r\n\t\t}\r\n\t}\r\n\r\n\tonPointerMove(event) {\r\n\t\tconst rect = this.element.getBoundingClientRect();\r\n\t\tconst x = event.clientX - rect.x;\r\n\t\tconst y = event.clientY - rect.y;\r\n\t\tconst w = rect.width;\r\n\t\tconst h = rect.height;\r\n\t\tthis.pointer.x = (x / w) * 2 - 1;\r\n\t\tthis.pointer.y = -(y / h) * 2 + 1;\r\n\t}\r\n\r\n\tonPointerUp(event) {\r\n\t\tconst rect = this.element.getBoundingClientRect();\r\n\t\tconst x = event.clientX - rect.x;\r\n\t\tconst y = event.clientY - rect.y;\r\n\t\tconst w = rect.width;\r\n\t\tconst h = rect.height;\r\n\t\tthis.pointer.x = (x / w) * 2 - 1;\r\n\t\tthis.pointer.y = -(y / h) * 2 + 1;\r\n\t\tthis.pointerUp = true;\r\n\t}\r\n\r\n\t/*\r\n\tonMouseMove(e) {\r\n\t\tconst w2 = window.innerWidth / 2;\r\n\t\tconst h2 = window.innerHeight / 2;\r\n\t\tthis.mouse = {\r\n\t\t\tx: (e.clientX - w2) / w2,\r\n\t\t\ty: (e.clientY - h2) / h2,\r\n\t\t};\r\n\t\t// console.log('onMouseMove', mouse);\r\n\t}\r\n\t*/\r\n\r\n\t/*\r\n\tdoParallax() {\r\n\t\t// parallax\r\n\t\tthis.parallax.x += (this.mouse.x - this.parallax.x) / 8;\r\n\t\tthis.parallax.y += (this.mouse.y - this.parallax.y) / 8;\r\n\t\t//\r\n\t\tthis.directional1.position.set(this.parallax.x * 0.3, 2 + this.parallax.y * 0.3, 0.5);\r\n\t\tthis.directional2.position.set(this.parallax.x * 0.3, -2 + this.parallax.y * 0.3, 0);\r\n\t}\r\n\t*/\r\n\r\n\tonRender(delta) {\r\n\t\tif (this.tooltip == null) {\r\n\t\t\tif (!this.dragService.dragging) {\r\n\t\t\t\tthis.globeRotation.x += this.globeSpeedRotation.x;\r\n\t\t\t\tthis.globeRotation.y += this.globeSpeedRotation.y;\r\n\t\t\t\tthis.globeSpeedRotation.x += (0.0000 - this.globeSpeedRotation.x) / 50;\r\n\t\t\t\tthis.globeSpeedRotation.y += (0.0003 - this.globeSpeedRotation.y) / 50;\r\n\t\t\t}\r\n\t\t\tthis.globeGroup.rotation.copy(this.globeRotation).add(this.globeDragRotation);\r\n\t\t\tif (this.mode === Modes.Curves) {\r\n\t\t\t\tthis.curves.onRender();\r\n\t\t\t}\r\n\t\t\t/*\r\n\t\t\tparticles.geometry.vertices.forEach((vertex, i) => {\r\n\t\t\t\tconst local = globeGroup.localToWorld(vertex.clone());\r\n\t\t\t\tconst distance = local.distanceTo(particleRef);\r\n\t\t\t\tconst s = Math.max(0, Math.min(1, (1 - distance))) * 5;\r\n\t\t\t\tparticles.geometry.colors[i] = new THREE.Color(s, s, s);\r\n\t\t\t\tparticles.geometry.colorsNeedUpdate = true;\r\n\t\t\t});\r\n\t\t\t*/\r\n\t\t\tthis.onCheckIntersections();\r\n\t\t}\r\n\t\tthis.renderer.render(this.scene, this.camera);\r\n\t\t// doParallax();\r\n\t}\r\n\r\n\tonPlay() {\r\n\t\tconst clock = new THREE.Clock();\r\n\t\tconst loop = (time) => {\r\n\t\t\tconst delta = clock.getDelta();\r\n\t\t\tthis.onRender(delta);\r\n\t\t\twindow.requestAnimationFrame(loop);\r\n\t\t}\r\n\t\tloop();\r\n\t}\r\n\r\n\tonCheckIntersections() {\r\n\t\tif (this.mode === Modes.Interactive) {\r\n\t\t\tconst points = this.points.group;\r\n\t\t\tconst geometry = points.geometry;\r\n\t\t\tconst attributes = geometry.attributes;\r\n\t\t\tconst raycaster = this.raycaster;\r\n\t\t\tconst pointer = this.pointer;\r\n\t\t\tconst camera = this.camera;\r\n\t\t\traycaster.setFromCamera(pointer, camera);\r\n\t\t\tconst intersections = raycaster.intersectObject(points);\r\n\t\t\tconst intersection = (intersections.length) > 0 ? intersections[0] : null;\r\n\t\t\tthis.pointIndex = intersection ? intersection.index : -1;\r\n\t\t}\r\n\t}\r\n\r\n\tpoint = { pow: 1 };\r\n\tpointIndex_ = -1;\r\n\tset pointIndex(pointIndex) {\r\n\t\tif (this.pointIndex_ !== pointIndex) {\r\n\t\t\tthis.pointIndex_ = pointIndex;\r\n\t\t\tconst points = this.points.group;\r\n\t\t\tconst geometry = points.geometry;\r\n\t\t\tconst attributes = geometry.attributes;\r\n\t\t\t/*\r\n\t\t\tfor (let i = 0, t = attributes.customsize.array.length; i < t; i++) {\r\n\t\t\t\tattributes.customsize.array[i] = PARTICLE_SIZE * (i == pointIndex ? 3 : 1);\r\n\t\t\t}\r\n\t\t\tattributes.customsize.needsUpdate = true;\r\n\t\t\t*/\r\n\t\t\tgsap.set(this.element, { cursor: pointIndex !== -1 ? 'pointer' : 'auto' });\r\n\t\t\tconst o = this.point;\r\n\t\t\to.pow = 0;\r\n\t\t\tgsap.to(o, {\r\n\t\t\t\tpow: 1,\r\n\t\t\t\tduration: 0.6,\r\n\t\t\t\tease: Power3.easeOut,\r\n\t\t\t\toverwrite: 'all',\r\n\t\t\t\tonUpdate: () => {\r\n\t\t\t\t\tfor (let i = 0, t = attributes.customsize.array.length; i < t; i++) {\r\n\t\t\t\t\t\tif (i === pointIndex) {\r\n\t\t\t\t\t\t\tattributes.customsize.array[i] = PARTICLE_SIZE * (1 + 1 * o.pow);\r\n\t\t\t\t\t\t} else if (attributes.customsize.array[i] > PARTICLE_SIZE) {\r\n\t\t\t\t\t\t\tattributes.customsize.array[i] = PARTICLE_SIZE;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tattributes.customsize.needsUpdate = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (this.pointerUp) {\r\n\t\t\tthis.pointerUp = false;\r\n\t\t\tthis.onPointSelected(pointIndex);\r\n\t\t}\r\n\t}\r\n\r\n\tonPointSelected(index) {\r\n\t\tif (index !== -1) {\r\n\t\t\tconst item = this.data[index];\r\n\t\t\tconst tooltip = this.tooltip = new Tooltip(item, () => {\r\n\t\t\t\tthis.element.removeChild(tooltip.element);\r\n\t\t\t\tthis.tooltip = null;\r\n\t\t\t});\r\n\t\t\tthis.element.appendChild(tooltip.element);\r\n\t\t\tconsole.log('onPointSelected', index, this.tooltip);\r\n\t\t\tif (typeof window['onPointSelected'] === 'function') {\r\n\t\t\t\twindow.onPointSelected(item, index);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","import { Globe } from './globe/globe';\r\n\r\nconst globes = Globe.init();\r\n\r\n"]}