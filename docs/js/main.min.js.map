{"version":3,"sources":["src/js/main.js","../../src/js/globe/constants.js","../../node_modules/d3-geo/src/math.js","../../node_modules/d3-geo/src/interpolate.js","../../src/js/globe/curves.js","../../src/js/globe/drag.service.js","../../src/js/globe/points.js","../../src/js/globe/tooltip.js","../../src/js/globe/globe.js","../../src/js/main.js"],"names":["g","f","exports","module","require","define","amd","globalThis","self","THREE","this","THREE$1","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_defineProperty","obj","value","GLOBE_RADIUS","PARTICLE_SIZE","CURVE_SEGMENTS","Vector3","DEGREE_TO_RADIAN","Math","PI","pi","window","COORDINATES","latitude","longitude","color","map","x","Color","halfPi","degrees","radians","atan2","cos","sin","sqrt","haversin","geoInterpolate","a","b","x0","y0","x1","y1","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d","asin","k","interpolate","t","B","A","y","z","distance","Curve","coords","material","getHex","spline","startLat","startLng","endLat","endLng","start","coordinateToPosition","end","altitude","num","distanceTo","min","max","midCoord1","midCoord2","mid1","mid2","getSplineFromCoords","geometry","points","Float32Array","vertices","getPoints","j","vertex","setAttribute","setDrawRange","mesh","prototype","onRender","c","index","from","to","floor","Curves","data","group","items","fromPoint","find","italy","filter","forEach","p","push","curves","item","add","lat","lng","radius","phi","theta","DragService","downCallback","moveCallback","upCallback","document","e","console","log","dragging","init","_proto","event","position","strength","speed","onMouseDown","bind","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","addEventListener","onDown","down","onDrag","innerWidth","innerHeight","onUp","removeEventListener","clientX","clientY","addMouseListeners","removeMouseListeners","touches","preventDefault","pageX","pageY","addTouchListeners","removeTouchListeners","Points","canvas","getParticleCanvas","texture","CanvasTexture","BufferGeometry","PointsMaterial","size","vertexColors","VertexColors","depthTest","transparent","onBeforeCompile","shader","vertexShader","replace","fragmentShader","normals","colors","sizes","normal","getLatLonToVector","point","copy","normalize","r","BufferAttribute","Float32BufferAttribute","createElement","width","height","ctx","getContext","gradient","createRadialGradient","addColorStop","fillStyle","fillRect","lon","Tooltip","removeCallback","div","innerHTML","country","title","address","firstElementChild","element","querySelector","Euler","euler","set","order","Modes","Globe","pow","load","Array","slice","call","querySelectorAll","Constructor","protoProps","staticProps","_this","src","getAttribute","fetch","then","response","json","type","foreign","concat","loadTexture","_this2","loader","TextureLoader","crossOrigin","globeTexture","initScene","mode","mouse","parallax","renderer","WebGLRenderer","alpha","antialias","shadowMap","enabled","setSize","appendChild","domElement","scene","Scene","camera","PerspectiveCamera","up","lookAt","ambient","AmbientLight","directional1","DirectionalLight","globeRotation","globeDragRotation","globeStartDragRotation","globeSpeedRotation","globeGroup","Group","rotation","globe","getGlobe","raycaster","Raycaster","params","threshold","pointer","Vector2","onResize","onPointerMove","onPointerUp","dragService","move","onPlay","classList","SphereGeometry","MeshStandardMaterial","roughness","metalness","Mesh","addShadow","parent","PlaneGeometry","rotateX","ShadowMaterial","opacity","receiveShadow","aspect","offsetWidth","offsetHeight","zoom","updateProjectionMatrix","rect","getBoundingClientRect","w","h","pointerUp","w2","h2","doParallax","directional2","delta","tooltip","onCheckIntersections","render","_this3","clock","Clock","loop","time","getDelta","requestAnimationFrame","attributes","setFromCamera","intersections","intersectObject","intersection","pointIndex","onPointSelected","_this4","removeChild","pointIndex_","gsap","cursor","o","duration","ease","Power3","easeOut","overwrite","onUpdate","customsize","array","needsUpdate"],"mappings":"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","file":"docs\\js\\main.min.js","sourcesContent":[null,"\r\nexport const GLOBE_RADIUS = 0.5;\r\nexport const PARTICLE_RADIUS = GLOBE_RADIUS + 0.001;\r\nexport const PARTICLE_SIZE = 0.03;\r\nexport const PARTICLE_THRESHOLD = 0.015;\r\nexport const GLOBE_CENTER = new THREE.Vector3(0, 0, 0);\r\n\r\nexport const PI_TWO = Math.PI * 2;\r\nexport const PI_HALF = Math.PI / 2;\r\n\r\n\r\n\r\nexport const CURVE_SEGMENTS = 128;\r\nexport const CURVE_MIN_ALTITUDE = GLOBE_RADIUS / 10;\r\nexport const CURVE_MAX_ALTITUDE = GLOBE_RADIUS;\r\nexport const CURVE_COLOR = 0x283583;\r\n\r\nexport const DEGREE_TO_RADIAN = Math.PI / 180;\r\n\r\nexport const COORDINATES = window.COORDINATES || [\r\n\t{ latitude: 43.9096538, longitude: 12.8399805, color: '283583' }, // pesaro\r\n\t{ latitude: 41.8519772, longitude: 12.2347364, color: '00833e' }, // rome\r\n\t{ latitude: 51.5287718, longitude: -0.2416791, color: '283583' }, // london\r\n\t{ latitude: 55.6713812, longitude: 12.4537393, color: '00833e' }, // copenaghen\r\n\t{ latitude: 40.6976637, longitude: -74.1197623, color: '283583' }, // new york\r\n\t{ latitude: 19.3911668, longitude: -99.4238221, color: '00833e' }, // mexico city\r\n\t{ latitude: 39.9390731, longitude: 116.11726, color: '283583' }, // beijing\r\n\t{ latitude: 31.2243084, longitude: 120.9162376, color: '00833e' }, // shangai\r\n].map(x => {\r\n\tx.color = new THREE.Color(`#${x.color}`);\r\n\treturn x;\r\n});\r\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import { geoInterpolate } from 'd3-geo';\r\nimport * as THREE from 'three';\r\nimport { CURVE_MAX_ALTITUDE, CURVE_MIN_ALTITUDE, CURVE_SEGMENTS, DEGREE_TO_RADIAN, GLOBE_RADIUS } from './constants';\r\n\r\nexport class Curve {\r\n\r\n\tconstructor(coords, color) {\r\n\r\n\t\tconst material = this.material = new THREE.MeshBasicMaterial({\r\n\t\t\t// blending: THREE.AdditiveBlending,\r\n\t\t\t// opacity: 1,\r\n\t\t\t// transparent: true,\r\n\t\t\tcolor: color.getHex(),\r\n\t\t});\r\n\r\n\t\tconst { spline } = getSplineFromCoords(coords);\r\n\r\n\t\tconst geometry = new THREE.BufferGeometry();\r\n\t\tconst points = new Float32Array(CURVE_SEGMENTS * 3);\r\n\t\tconst vertices = spline.getPoints(CURVE_SEGMENTS - 1);\r\n\r\n\t\tfor (let i = 0, j = 0; i < vertices.length; i++) {\r\n\t\t\tconst vertex = vertices[i];\r\n\t\t\tpoints[j++] = vertex.x;\r\n\t\t\tpoints[j++] = vertex.y;\r\n\t\t\tpoints[j++] = vertex.z;\r\n\t\t}\r\n\r\n\t\tgeometry.setAttribute('position', new THREE.BufferAttribute(points, 3));\r\n\r\n\t\tconst i = this.i = 0;\r\n\t\tgeometry.setDrawRange(0, i);\r\n\r\n\t\tthis.mesh = new THREE.Line(geometry, material);\r\n\t}\r\n\r\n\tonRender(i, c, t) {\r\n\t\ti = (i + CURVE_SEGMENTS / 2 * c);\r\n\t\tconst pause = Math.floor(i / (CURVE_SEGMENTS * 2)) % 7 !== 0;\r\n\t\tconst index = i % (CURVE_SEGMENTS * 2);\r\n\t\tlet from = 0;\r\n\t\tlet to = 0;\r\n\t\tif (!pause) {\r\n\t\t\tto = index;\r\n\t\t\tif (index > CURVE_SEGMENTS) {\r\n\t\t\t\tfrom = index - CURVE_SEGMENTS;\r\n\t\t\t\tto = CURVE_SEGMENTS;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.mesh.geometry.setDrawRange(from, to);\r\n\t}\r\n\r\n}\r\n\r\nexport class Curves {\r\n\r\n\tconstructor(data) {\r\n\t\tconst group = this.group = new THREE.Group();\r\n\r\n\t\tconst items = [];\r\n\r\n\t\tconst fromPoint = data.find(x => x.italy);\r\n\t\tconst toPoints = data.filter(x => !x.italy);\r\n\t\ttoPoints.forEach((p) => {\r\n\t\t\titems.push({\r\n\t\t\t\tcoords: [fromPoint.latitude, fromPoint.longitude, p.latitude, p.longitude],\r\n\t\t\t\tcolor: p.color,\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.items = items;\r\n\t\tconst curves = this.curves = items.map((item, index) => new Curve(item.coords, item.color));\r\n\t\tcurves.forEach(x => group.add(x.mesh));\r\n\r\n\t\tthis.i = 0;\r\n\t}\r\n\r\n\tonRender() {\r\n\t\tconst i = Math.floor(this.i++ / 5);\r\n\t\tconst t = this.curves.length;\r\n\t\tthis.curves.forEach((x, c) => x.onRender(i, c, t));\r\n\t}\r\n\r\n}\r\n\r\nexport function clamp(num, min, max) {\r\n\treturn num <= min ? min : (num >= max ? max : num);\r\n}\r\n\r\nexport function coordinateToPosition(lat, lng, radius) {\r\n\tconst phi = (90 - lat) * DEGREE_TO_RADIAN;\r\n\tconst theta = (lng + 180) * DEGREE_TO_RADIAN;\r\n\treturn new THREE.Vector3(\r\n\t\t- radius * Math.sin(phi) * Math.cos(theta),\r\n\t\tradius * Math.cos(phi),\r\n\t\tradius * Math.sin(phi) * Math.sin(theta)\r\n\t);\r\n}\r\n\r\nexport function getSplineFromCoords(coords) {\r\n\tconst startLat = coords[0];\r\n\tconst startLng = coords[1];\r\n\tconst endLat = coords[2];\r\n\tconst endLng = coords[3];\r\n\t// spline vertices\r\n\tconst start = coordinateToPosition(startLat, startLng, GLOBE_RADIUS);\r\n\tconst end = coordinateToPosition(endLat, endLng, GLOBE_RADIUS);\r\n\tconst altitude = clamp(start.distanceTo(end) * .75, CURVE_MIN_ALTITUDE, CURVE_MAX_ALTITUDE);\r\n\tconst interpolate = geoInterpolate([startLng, startLat], [endLng, endLat]);\r\n\tconst midCoord1 = interpolate(0.25);\r\n\tconst midCoord2 = interpolate(0.75);\r\n\tconst mid1 = coordinateToPosition(midCoord1[1], midCoord1[0], GLOBE_RADIUS + altitude);\r\n\tconst mid2 = coordinateToPosition(midCoord2[1], midCoord2[0], GLOBE_RADIUS + altitude);\r\n\treturn {\r\n\t\tstart,\r\n\t\tend,\r\n\t\tspline: new THREE.CubicBezierCurve3(start, mid1, mid2, end),\r\n\t};\r\n}\r\n\r\n\r\n","export class DragService {\r\n\r\n\tconstructor(target, downCallback, moveCallback, upCallback) {\r\n\t\tthis.target = target || document;\r\n\t\tthis.downCallback = downCallback || function(e) {\r\n\t\t\tconsole.log('DragListener.downCallback not setted', e);\r\n\t\t};\r\n\t\tthis.moveCallback = moveCallback || function(e) {\r\n\t\t\tconsole.log('DragListener.moveCallback not setted', e);\r\n\t\t};\r\n\t\tthis.upCallback = upCallback || function(e) {\r\n\t\t\tconsole.log('DragListener.upCallback not setted', e);\r\n\t\t};\r\n\t\tthis.dragging = false;\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.event = {\r\n\t\t\tposition: { x: 0, y: 0 },\r\n\t\t\tdistance: { x: 0, y: 0 },\r\n\t\t\tstrength: { x: 0, y: 0 },\r\n\t\t\tspeed: { x: 0, y: 0 },\r\n\t\t\ttarget: this.target,\r\n\t\t};\r\n\t\tthis.onMouseDown = this.onMouseDown.bind(this);\r\n\t\tthis.onMouseMove = this.onMouseMove.bind(this);\r\n\t\tthis.onMouseUp = this.onMouseUp.bind(this);\r\n\t\tthis.onTouchStart = this.onTouchStart.bind(this);\r\n\t\tthis.onTouchMove = this.onTouchMove.bind(this);\r\n\t\tthis.onTouchEnd = this.onTouchEnd.bind(this);\r\n\t\tthis.target.addEventListener('mousedown', this.onMouseDown, false);\r\n\t\tthis.target.addEventListener('touchstart', this.onTouchStart, false);\r\n\t}\r\n\r\n\tonDown(x, y) {\r\n\t\tthis.down = { x, y };\r\n\t\tthis.position = { x, y };\r\n\t\tthis.strength = { x: 0, y: 0 };\r\n\t\tthis.distance = this.distance || { x: 0, y: 0 };\r\n\t\tthis.speed = { x: 0, y: 0 };\r\n\t\tthis.downCallback(this);\r\n\t}\r\n\r\n\tonDrag(x, y) {\r\n\t\tthis.dragging = true;\r\n\t\tconst down = this.down;\r\n\t\tconst position = this.position;\r\n\t\tconst speed = this.speed;\r\n\t\tconst target = this.target;\r\n\t\tconst distance = this.distance;\r\n\t\tdistance.x = x - down.x;\r\n\t\tdistance.y = y - down.y;\r\n\t\tconst strength = { x: distance.x / window.innerWidth * 2, y: distance.y / window.innerHeight * 2 };\r\n\t\t// speed.x += (strength.x - this.strength.x) * 0.1;\r\n\t\t// speed.y += (strength.y - this.strength.y) * 0.1;\r\n\t\tspeed.x = speed.x * 0.9 + (x - position.x) / window.innerWidth * 2;\r\n\t\tspeed.y = speed.y * 0.9 + (y - position.y) / window.innerHeight * 2;\r\n\t\tposition.x = x;\r\n\t\tposition.y = y;\r\n\t\tthis.strength = strength;\r\n\t\tconst event = this.event;\r\n\t\tevent.position.x = x;\r\n\t\tevent.position.y = y;\r\n\t\tevent.distance.x = distance.x;\r\n\t\tevent.distance.y = distance.y;\r\n\t\tevent.strength.x = strength.x;\r\n\t\tevent.strength.y = strength.y;\r\n\t\tevent.speed.x = speed.x;\r\n\t\tevent.speed.y = speed.y;\r\n\t\tthis.moveCallback(event);\r\n\t}\r\n\r\n\tonUp(x, y) {\r\n\t\tthis.dragging = false;\r\n\t\tthis.upCallback(this);\r\n\t}\r\n\r\n\tonMouseDown(e) {\r\n\t\tthis.target.removeEventListener('touchstart', this.onTouchStart);\r\n\t\tthis.onDown(e.clientX, e.clientY);\r\n\t\tthis.addMouseListeners();\r\n\t}\r\n\r\n\tonMouseMove(e) {\r\n\t\tthis.onDrag(e.clientX, e.clientY);\r\n\t}\r\n\r\n\tonMouseUp(e) {\r\n\t\tthis.removeMouseListeners();\r\n\t\tthis.onDrag(e.clientX, e.clientY);\r\n\t\tthis.onUp();\r\n\t}\r\n\r\n\tonTouchStart(e) {\r\n\t\tthis.target.removeEventListener('mousedown', this.onMouseDown);\r\n\t\tif (e.touches.length > 0) {\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.onDown(e.touches[0].pageX, e.touches[0].pageY);\r\n\t\t\tthis.addTouchListeners();\r\n\t\t}\r\n\t}\r\n\r\n\tonTouchMove(e) {\r\n\t\tif (e.touches.length > 0) {\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.onDrag(e.touches[0].pageX, e.touches[0].pageY);\r\n\t\t}\r\n\t}\r\n\r\n\tonTouchEnd(e) {\r\n\t\tthis.removeTouchListeners();\r\n\t\tthis.onDrag(this.position.x, this.position.y);\r\n\t\tthis.onUp();\r\n\t}\r\n\r\n\taddMouseListeners() {\r\n\t\tdocument.addEventListener('mousemove', this.onMouseMove, false);\r\n\t\tdocument.addEventListener('mouseup', this.onMouseUp, false);\r\n\t}\r\n\r\n\taddTouchListeners() {\r\n\t\tdocument.addEventListener('touchend', this.onTouchEnd, false);\r\n\t\tdocument.addEventListener('touchmove', this.onTouchMove, false);\r\n\t}\r\n\r\n\tremoveMouseListeners() {\r\n\t\tdocument.removeEventListener('mousemove', this.onMouseMove);\r\n\t\tdocument.removeEventListener('mouseup', this.onMouseUp);\r\n\t}\r\n\r\n\tremoveTouchListeners() {\r\n\t\tdocument.removeEventListener('touchend', this.onTouchEnd);\r\n\t\tdocument.removeEventListener('touchmove', this.onTouchMove);\r\n\t}\r\n}\r\n","import { PARTICLE_RADIUS, PARTICLE_SIZE } from './constants';\r\n\r\nexport class Points {\r\n\r\n\tconstructor(items) {\r\n\t\tthis.items = items;\r\n\t\tconst canvas = Points.getParticleCanvas();\r\n\t\tconst texture = new THREE.CanvasTexture(canvas);\r\n\t\tconst geometry = new THREE.BufferGeometry();\r\n\t\tconst material = new THREE.PointsMaterial({\r\n\t\t\tsize: PARTICLE_SIZE,\r\n\t\t\tmap: texture,\r\n\t\t\tvertexColors: THREE.VertexColors,\r\n\t\t\t// blending: THREE.AdditiveBlending,\r\n\t\t\tdepthTest: false,\r\n\t\t\ttransparent: true\r\n\t\t});\r\n\t\tmaterial.onBeforeCompile = shader => {\r\n\t\t\tshader.vertexShader = `\r\n\t\t\tattribute float customsize;\r\n  varying float vVisible;\r\n  ` + shader.vertexShader;\r\n\t\t\tshader.vertexShader = shader.vertexShader.replace(\r\n\t\t\t\t`gl_PointSize = size;`,\r\n\t\t\t\t`\r\n    vec3 vNormal = normalMatrix * normal;\r\n    vVisible = step( 0., dot( -normalize(mvPosition.xyz), normalize(vNormal) ) );\r\n\r\n    gl_PointSize = customsize;\r\n    `\r\n\t\t\t);\r\n\t\t\t// console.log(shader.vertexShader);\r\n\t\t\tshader.fragmentShader = `\r\n    varying float vVisible;\r\n` + shader.fragmentShader;\r\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace(\r\n\t\t\t\t`#include <clipping_planes_fragment>`,\r\n\t\t\t\t`\r\n    if ( floor(vVisible + 0.1) == 0.0 ) discard;\r\n    #include <clipping_planes_fragment>\r\n`\r\n\t\t\t);\r\n\t\t\t// console.log(shader.fragmentShader);\r\n\t\t}\r\n\t\tconst vertices = new Float32Array(items.length * 3);\r\n\t\tconst normals = new Float32Array(items.length * 3);\r\n\t\tconst colors = new Float32Array(items.length * 3);\r\n\t\tconst sizes = new Float32Array(items.length);\r\n\t\tconst normal = new THREE.Vector3();\r\n\t\tconst points = items.map((x) => {\r\n\t\t\treturn Points.getLatLonToVector(x.latitude, x.longitude, PARTICLE_RADIUS);\r\n\t\t}).forEach((point, i) => {\r\n\t\t\tconst item = items[i];\r\n\t\t\tvertices[i * 3] = point.x;\r\n\t\t\tvertices[i * 3 + 1] = point.y;\r\n\t\t\tvertices[i * 3 + 2] = point.z;\r\n\t\t\tnormal.copy(point).normalize();\r\n\t\t\tnormals[i * 3] = normal.x;\r\n\t\t\tnormals[i * 3 + 1] = normal.y;\r\n\t\t\tnormals[i * 3 + 2] = normal.z;\r\n\t\t\tcolors[i * 3] = item.color.r;\r\n\t\t\tcolors[i * 3 + 1] = item.color.g;\r\n\t\t\tcolors[i * 3 + 2] = item.color.b;\r\n\t\t\tsizes[i] = PARTICLE_SIZE;\r\n\t\t});\r\n\t\tgeometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\r\n\t\tgeometry.setAttribute('normal', new THREE.BufferAttribute(normals, 3));\r\n\t\tgeometry.setAttribute('color', new THREE.BufferAttribute(colors, 3));\r\n\t\tgeometry.setAttribute('customsize', new THREE.Float32BufferAttribute(sizes, 1));\r\n\t\tconst group = this.group = new THREE.Points(geometry, material);\r\n\t}\r\n\r\n\tstatic getParticleCanvas() {\r\n\t\tconst canvas = document.createElement('canvas');\r\n\t\tcanvas.width = 64;\r\n\t\tcanvas.height = 64;\r\n\t\tconst ctx = canvas.getContext('2d');\r\n\t\tconst gradient = ctx.createRadialGradient(\r\n\t\t\tcanvas.width / 2,\r\n\t\t\tcanvas.height / 2,\r\n\t\t\t0,\r\n\t\t\tcanvas.width / 2,\r\n\t\t\tcanvas.height / 2,\r\n\t\t\tcanvas.width / 2\r\n\t\t);\r\n\t\tgradient.addColorStop(0, 'rgba(255,255,255,1)');\r\n\t\tgradient.addColorStop(0.9, 'rgba(255,255,255,1)');\r\n\t\tgradient.addColorStop(0.91, 'rgba(255,255,255,0)');\r\n\t\tgradient.addColorStop(1, 'rgba(255,255,255,0)');\r\n\t\tctx.fillStyle = gradient;\r\n\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\tstatic getLatLonToVector(lat, lon, radius) {\r\n\t\tconst phi = (90 - lat) * (Math.PI / 180);\r\n\t\tconst theta = (lon + 180) * (Math.PI / 180);\r\n\t\tconst x = -((radius) * Math.sin(phi) * Math.cos(theta));\r\n\t\tconst z = ((radius) * Math.sin(phi) * Math.sin(theta));\r\n\t\tconst y = ((radius) * Math.cos(phi));\r\n\t\treturn new THREE.Vector3(x, y, z);\r\n\t}\r\n\r\n}\r\n","export class Tooltip {\r\n\r\n\tconstructor(item, removeCallback) {\r\n\t\tconst div = document.createElement('div');\r\n\t\tdiv.innerHTML = `\r\n\t\t<div class=\"card--address\">\r\n\t\t\t<div class=\"card__content\">\r\n\t\t\t\t<div class=\"card__country\">${item.country}</div>\r\n\t\t\t\t<div class=\"card__city\">Sueca</div>\r\n\t\t\t\t<div class=\"card__name\">${item.title}</div>\r\n\t\t\t\t<div class=\"card__address\">${item.address}</div>\r\n\t\t\t\t<a class=\"card__phone\" href=\"tel:0034961702100\">Ph. +34 96 1702100</a>\r\n\t\t\t\t<a class=\"card__email\" href=\"mailto:www.sipcaminagra.es\">www.sipcaminagra.es</a>\r\n\t\t\t</div>\r\n\t\t\t<button class=\"card__close\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M23.954 21.03l-9.184-9.095 9.092-9.174-2.832-2.807-9.09 9.179-9.176-9.088-2.81 2.81 9.186 9.105-9.095 9.184 2.81 2.81 9.112-9.192 9.18 9.1z\"/></svg></button>\r\n\t\t</div>`;\r\n\t\tconsole.log(div.firstElementChild, item);\r\n\t\tthis.element = div.firstElementChild;\r\n\t\tthis.element.querySelector('.card__close').addEventListener('click', () => {\r\n\t\t\tif (typeof removeCallback === 'function') {\r\n\t\t\t\tremoveCallback();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","import { GLOBE_RADIUS, PARTICLE_SIZE, PARTICLE_THRESHOLD } from './constants';\r\nimport { Curves } from './curves';\r\nimport { DragService } from './drag.service';\r\nimport { Points } from './points';\r\nimport { Tooltip } from './tooltip';\r\n\r\n// var shadow = addShadow(scene);\r\nTHREE.Euler.prototype.add = function(euler) {\r\n\tthis.set(this.x + euler.x, this.y + euler.y, this.z + euler.z, this.order);\r\n\treturn this;\r\n};\r\n\r\nexport const Modes = {\r\n\tInteractive: 'interactive',\r\n\tCurves: 'curves',\r\n};\r\n\r\nexport class Globe {\r\n\r\n\tstatic init() {\r\n\t\treturn Array.prototype.slice.call(document.querySelectorAll('.group--globe')).map(x => new Globe(x));\r\n\t}\r\n\r\n\tconstructor(element) {\r\n\t\tthis.element = element;\r\n\t\tthis.load();\r\n\t}\r\n\r\n\tload() {\r\n\t\tconst src = this.element.getAttribute('data-src');\r\n\t\tfetch(src).then(response => response.json()).then(data => {\r\n\t\t\tdata = data.map(x => {\r\n\t\t\t\tx.latitude = x.position.lat;\r\n\t\t\t\tx.longitude = x.position.lng;\r\n\t\t\t\tx.color = x.type === 'company' ? new THREE.Color(`#00833e`) : new THREE.Color(`#283583`);\r\n\t\t\t\treturn x;\r\n\t\t\t});\r\n\t\t\tconst italy = data.find(x => x.italy);\r\n\t\t\tconst foreign = data.filter(x => !x.italy);\r\n\t\t\tthis.data = [italy].concat(foreign);\r\n\t\t\tthis.loadTexture();\r\n\t\t})\r\n\t}\r\n\r\n\tloadTexture() {\r\n\t\tconst src = this.element.getAttribute('data-texture');\r\n\t\tconst loader = new THREE.TextureLoader();\r\n\t\tloader.crossOrigin = '';\r\n\t\tloader.load(src, (texture) => {\r\n\t\t\t// texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\r\n\t\t\t// texture.repeat.set(2, 2);\r\n\t\t\tthis.globeTexture = texture;\r\n\t\t\tthis.initScene();\r\n\t\t});\r\n\t}\r\n\r\n\tinitScene() {\r\n\t\tconst element = this.element;\r\n\t\tconst mode = this.mode = element.getAttribute('data-mode') === Modes.Interactive ? Modes.Interactive : Modes.Curves;\r\n\r\n\t\tthis.mouse = { x: 0, y: 0 };\r\n\t\tthis.parallax = { x: 0, y: 0 };\r\n\r\n\t\tconst renderer = this.renderer = new THREE.WebGLRenderer({\r\n\t\t\talpha: true,\r\n\t\t\tantialias: false\r\n\t\t});\r\n\t\trenderer.shadowMap.enabled = true;\r\n\t\trenderer.setSize(window.innerWidth, window.innerHeight);\r\n\t\telement.appendChild(renderer.domElement);\r\n\r\n\t\tconst scene = this.scene = new THREE.Scene();\r\n\t\t// scene.fog = new THREE.FogExp2(0x000000, 0.1); // new THREE.Fog(0x000000, 0, 10);\r\n\r\n\t\tconst camera = this.camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.01, 100);\r\n\t\tcamera.position.set(0, 1.0, 2.0);\r\n\t\tcamera.up = new THREE.Vector3(0, 0, -1);\r\n\t\tcamera.lookAt(new THREE.Vector3(0, 0, 0));\r\n\r\n\t\tconst ambient = this.ambient = new THREE.AmbientLight(0x999696);\r\n\t\tscene.add(ambient);\r\n\r\n\t\tconst directional1 = this.directional1 = new THREE.DirectionalLight(0xfffbfb, 0.5);\r\n\t\tdirectional1.position.set(0, 1.5, 1);\r\n\t\tscene.add(directional1);\r\n\r\n\t\t// const directional2 = this.directional2 = new THREE.DirectionalLight(0xfffbfb, 0.2);\r\n\t\t// directional2.position.set(0, -2, -1);\r\n\t\t// scene.add(directional2);\r\n\r\n\t\tconst particleRef = new THREE.Vector3(0.0, 0.0, 1.0);\r\n\r\n\t\tconst globeRotation = this.globeRotation = new THREE.Euler(0.0, Math.PI * 1.2, 0.0, 'XYZ');\r\n\t\tconst globeDragRotation = this.globeDragRotation = new THREE.Euler(0, 0, 0, 'XYZ');\r\n\t\tconst globeStartDragRotation = this.globeStartDragRotation = new THREE.Euler(0, 0, 0, 'XYZ');\r\n\t\tconst globeSpeedRotation = this.globeSpeedRotation = new THREE.Euler(0, 0, 0, 'XYZ');\r\n\r\n\t\tconst globeGroup = this.globeGroup = new THREE.Group();\r\n\t\tglobeGroup.rotation.set(globeRotation.x, globeRotation.y, globeRotation.z);\r\n\t\tscene.add(globeGroup);\r\n\r\n\t\tconst globe = this.globe = this.getGlobe(this.globeTexture);\r\n\t\tglobeGroup.add(globe);\r\n\r\n\t\tconst points = this.points = new Points(this.data);\r\n\t\tglobeGroup.add(points.group);\r\n\r\n\t\tif (mode === Modes.Curves) {\r\n\t\t\tconst curves = this.curves = new Curves(this.data);\r\n\t\t\tglobeGroup.add(curves.group);\r\n\t\t}\r\n\r\n\t\tconst raycaster = this.raycaster = new THREE.Raycaster();\r\n\t\traycaster.params.Points.threshold = PARTICLE_THRESHOLD;\r\n\r\n\t\tconst pointer = this.pointer = new THREE.Vector2();\r\n\r\n\t\tthis.onResize = this.onResize.bind(this);\r\n\t\tthis.onPointerMove = this.onPointerMove.bind(this);\r\n\t\tthis.onPointerUp = this.onPointerUp.bind(this);\r\n\r\n\t\twindow.addEventListener('resize', this.onResize, false);\r\n\t\tdocument.addEventListener('pointermove', this.onPointerMove);\r\n\t\tdocument.addEventListener('pointerup', this.onPointerUp);\r\n\t\t// document.addEventListener('mousemove', onMouseMove, false);\r\n\r\n\t\tconst dragService = this.dragService = new DragService(element, (down) => {\r\n\t\t\tglobeStartDragRotation.copy(globeDragRotation);\r\n\t\t}, (move) => {\r\n\t\t\tglobeDragRotation.copy(globeStartDragRotation).add(new THREE.Euler(0, Math.PI * move.strength.x, 0, 'XYZ'));\r\n\t\t\tglobeSpeedRotation.set(0, 0, 0, 'XYZ');\r\n\t\t}, (up) => {\r\n\t\t\tglobeSpeedRotation.set(0, Math.PI * up.speed.x * 0.5, 0, 'XYZ');\r\n\t\t});\r\n\r\n\t\tthis.onPlay();\r\n\t\tthis.onResize();\r\n\r\n\t\tthis.element.classList.add('init');\r\n\t}\r\n\r\n\tgetGlobe(texture) {\r\n\t\tconst geometry = new THREE.SphereGeometry(GLOBE_RADIUS, 48, 48);\r\n\t\tconst material = new THREE.MeshStandardMaterial({\r\n\t\t\tcolor: '#ffffff',\r\n\t\t\troughness: 1,\r\n\t\t\tmetalness: 0.0,\r\n\t\t\tmap: texture,\r\n\t\t});\r\n\t\tconst mesh = new THREE.Mesh(geometry, material);\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\taddShadow(parent) {\r\n\t\tconst geometry = new THREE.PlaneGeometry(100, 100);\r\n\t\tgeometry.rotateX(-Math.PI / 4);\r\n\t\tconst material = new THREE.ShadowMaterial();\r\n\t\tmaterial.opacity = 0.2;\r\n\t\tconst mesh = new THREE.Mesh(geometry, material);\r\n\t\tmesh.position.z = -0.6;\r\n\t\tmesh.receiveShadow = true;\r\n\t\tparent.add(mesh);\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\tonResize() {\r\n\t\tconst element = this.element;\r\n\t\tconst renderer = this.renderer;\r\n\t\tconst camera = this.camera;\r\n\t\tconst size = {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 0,\r\n\t\t\taspect: 0,\r\n\t\t};\r\n\t\tsize.width = element.offsetWidth;\r\n\t\t/*\r\n\t\tgsap.set(element, {\r\n\t\t\theight: element.offsetWidth < 1024 ? element.offsetWidth * 0.9 : element.offsetWidth * 0.6\r\n\t\t});\r\n\t\t*/\r\n\t\tsize.height = element.offsetHeight;\r\n\t\tsize.aspect = size.width / size.height;\r\n\t\tif (renderer) {\r\n\t\t\trenderer.setSize(size.width, size.height);\r\n\t\t}\r\n\t\tif (camera) {\r\n\t\t\tcamera.aspect = size.aspect;\r\n\t\t\tcamera.zoom = (window.innerWidth < 768) ? 1.3 : 1;\r\n\t\t\tcamera.updateProjectionMatrix();\r\n\t\t}\r\n\t}\r\n\r\n\tonPointerMove(event) {\r\n\t\tconst rect = this.element.getBoundingClientRect();\r\n\t\tconst x = event.clientX - rect.x;\r\n\t\tconst y = event.clientY - rect.y;\r\n\t\tconst w = rect.width;\r\n\t\tconst h = rect.height;\r\n\t\tthis.pointer.x = (x / w) * 2 - 1;\r\n\t\tthis.pointer.y = -(y / h) * 2 + 1;\r\n\t}\r\n\r\n\tonPointerUp(event) {\r\n\t\tconst rect = this.element.getBoundingClientRect();\r\n\t\tconst x = event.clientX - rect.x;\r\n\t\tconst y = event.clientY - rect.y;\r\n\t\tconst w = rect.width;\r\n\t\tconst h = rect.height;\r\n\t\tthis.pointer.x = (x / w) * 2 - 1;\r\n\t\tthis.pointer.y = -(y / h) * 2 + 1;\r\n\t\tthis.pointerUp = true;\r\n\t}\r\n\r\n\tonMouseMove(e) {\r\n\t\tconst w2 = window.innerWidth / 2;\r\n\t\tconst h2 = window.innerHeight / 2;\r\n\t\tthis.mouse = {\r\n\t\t\tx: (e.clientX - w2) / w2,\r\n\t\t\ty: (e.clientY - h2) / h2,\r\n\t\t};\r\n\t\t// console.log('onMouseMove', mouse);\r\n\t}\r\n\r\n\tdoParallax() {\r\n\t\t// parallax\r\n\t\tthis.parallax.x += (this.mouse.x - this.parallax.x) / 8;\r\n\t\tthis.parallax.y += (this.mouse.y - this.parallax.y) / 8;\r\n\t\t//\r\n\t\tthis.directional1.position.set(this.parallax.x * 0.3, 2 + this.parallax.y * 0.3, 0.5);\r\n\t\tthis.directional2.position.set(this.parallax.x * 0.3, -2 + this.parallax.y * 0.3, 0);\r\n\t}\r\n\r\n\tonRender(delta) {\r\n\t\tif (!this.tooltip) {\r\n\t\t\tif (!this.dragService.dragging) {\r\n\t\t\t\tthis.globeRotation.y += this.globeSpeedRotation.y;\r\n\t\t\t\tthis.globeSpeedRotation.y += (0.0005 - this.globeSpeedRotation.y) / 50;\r\n\t\t\t}\r\n\t\t\tthis.globeGroup.rotation.copy(this.globeRotation).add(this.globeDragRotation);\r\n\t\t\tif (this.mode === Modes.Curves) {\r\n\t\t\t\tthis.curves.onRender();\r\n\t\t\t}\r\n\t\t\t/*\r\n\t\t\tparticles.geometry.vertices.forEach((vertex, i) => {\r\n\t\t\t\tconst local = globeGroup.localToWorld(vertex.clone());\r\n\t\t\t\tconst distance = local.distanceTo(particleRef);\r\n\t\t\t\tconst s = Math.max(0, Math.min(1, (1 - distance))) * 5;\r\n\t\t\t\tparticles.geometry.colors[i] = new THREE.Color(s, s, s);\r\n\t\t\t\tparticles.geometry.colorsNeedUpdate = true;\r\n\t\t\t});\r\n\t\t\t*/\r\n\t\t\tthis.onCheckIntersections();\r\n\t\t}\r\n\t\tthis.renderer.render(this.scene, this.camera);\r\n\t\t// doParallax();\r\n\t}\r\n\r\n\tonPlay() {\r\n\t\tconst clock = new THREE.Clock();\r\n\t\tconst loop = (time) => {\r\n\t\t\tconst delta = clock.getDelta();\r\n\t\t\tthis.onRender(delta);\r\n\t\t\twindow.requestAnimationFrame(loop);\r\n\t\t}\r\n\t\tloop();\r\n\t}\r\n\r\n\tonCheckIntersections() {\r\n\t\tif (this.mode === Modes.Interactive) {\r\n\t\t\tconst points = this.points.group;\r\n\t\t\tconst geometry = points.geometry;\r\n\t\t\tconst attributes = geometry.attributes;\r\n\t\t\tconst raycaster = this.raycaster;\r\n\t\t\tconst pointer = this.pointer;\r\n\t\t\tconst camera = this.camera;\r\n\t\t\traycaster.setFromCamera(pointer, camera);\r\n\t\t\tconst intersections = raycaster.intersectObject(points);\r\n\t\t\tconst intersection = (intersections.length) > 0 ? intersections[0] : null;\r\n\t\t\tthis.pointIndex = intersection ? intersection.index : -1;\r\n\t\t}\r\n\t}\r\n\r\n\tpoint = { pow: 1 };\r\n\tpointIndex_ = -1;\r\n\tset pointIndex(pointIndex) {\r\n\t\tif (this.pointIndex_ !== pointIndex) {\r\n\t\t\tthis.pointIndex_ = pointIndex;\r\n\t\t\tconst points = this.points.group;\r\n\t\t\tconst geometry = points.geometry;\r\n\t\t\tconst attributes = geometry.attributes;\r\n\t\t\t/*\r\n\t\t\tfor (let i = 0, t = attributes.customsize.array.length; i < t; i++) {\r\n\t\t\t\tattributes.customsize.array[i] = PARTICLE_SIZE * (i == pointIndex ? 3 : 1);\r\n\t\t\t}\r\n\t\t\tattributes.customsize.needsUpdate = true;\r\n\t\t\t*/\r\n\t\t\tgsap.set(this.element, { cursor: pointIndex !== -1 ? 'pointer' : 'auto' });\r\n\t\t\tconst o = this.point;\r\n\t\t\to.pow = 0;\r\n\t\t\tgsap.to(o, {\r\n\t\t\t\tpow: 1,\r\n\t\t\t\tduration: 0.6,\r\n\t\t\t\tease: Power3.easeOut,\r\n\t\t\t\toverwrite: 'all',\r\n\t\t\t\tonUpdate: () => {\r\n\t\t\t\t\tfor (let i = 0, t = attributes.customsize.array.length; i < t; i++) {\r\n\t\t\t\t\t\tif (i === pointIndex) {\r\n\t\t\t\t\t\t\tattributes.customsize.array[i] = PARTICLE_SIZE * (1 + 1 * o.pow);\r\n\t\t\t\t\t\t} else if (attributes.customsize.array[i] > PARTICLE_SIZE) {\r\n\t\t\t\t\t\t\tattributes.customsize.array[i] = PARTICLE_SIZE;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tattributes.customsize.needsUpdate = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (this.pointerUp) {\r\n\t\t\tthis.pointerUp = false;\r\n\t\t\tthis.onPointSelected(pointIndex);\r\n\t\t}\r\n\t}\r\n\r\n\tonPointSelected(index) {\r\n\t\tif (index !== -1) {\r\n\t\t\tconst item = this.data[index];\r\n\t\t\tconst tooltip = this.tooltip = new Tooltip(item, () => {\r\n\t\t\t\tthis.element.removeChild(tooltip.element);\r\n\t\t\t\tthis.tooltip = null;\r\n\t\t\t});\r\n\t\t\tthis.element.appendChild(tooltip.element);\r\n\t\t\tconsole.log('onPointSelected', index, this.tooltip);\r\n\t\t\tif (typeof window['onPointSelected'] === 'function') {\r\n\t\t\t\twindow.onPointSelected(item, index);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","import { Globe } from './globe/globe';\r\n\r\nconst globes = Globe.init();\r\n\r\n"]}